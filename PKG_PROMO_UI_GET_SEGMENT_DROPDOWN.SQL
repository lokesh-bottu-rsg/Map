CREATE OR REPLACE PROCEDURE PKG_PROMO_UI_GET_SEGMENT_DROPDOWN(IN_PROJECT_ID INT)
RETURNS TABLE(
    SEGMENT_ID INTEGER,
    SEGMENT_NAME VARCHAR,
    SEGMENT_TYPE_ID INTEGER,
    DESCRIPTION VARCHAR,
    SEGMENT_AIRBYTE FLOAT,
    IS_SELECTED INTEGER
)
LANGUAGE SQL
AS
DECLARE
    RES RESULTSET;
    V_SEGMENT INT;
    
BEGIN

     SELECT TARGET_SEGMENT INTO :V_SEGMENT FROM PR_PROJECT WHERE PROJECT_ID = :IN_PROJECT_ID AND TARGET_SEGMENT_AIRBYTE > 0;
    -- -- Checking if PROJECT_ID is not available
    IF (:IN_PROJECT_ID = 0) THEN
        RES := 
            (SELECT RS.SEGMENT_ID, RS.SEGMENT_NAME, RST.SEGMENT_TYPE_ID, RST.DESCRIPTION, RS.SEGMENT_AIRBYTE, 0 AS IS_SELECTED
            FROM REF_SEGMENT RS
            INNER JOIN REF_SEGMENT_TYPE RST
                ON RST.SEGMENT_TYPE_ID = RS.SEGMENT_TYPE_ID
            WHERE RS.SEGMENT_ID <= 10
            ORDER BY CASE RST.SEGMENT_TYPE_ID WHEN 3 THEN 4 WHEN 4 THEN 3 END);

    ELSEIF (:V_SEGMENT = 0) THEN
        RES :=
            (SELECT RS.SEGMENT_ID, RS.SEGMENT_NAME, RST.SEGMENT_TYPE_ID, RST.DESCRIPTION, RS.SEGMENT_AIRBYTE,
                   CASE WHEN RSC.SEGMENT_ID IS NOT NULL THEN 1 ELSE 0 END AS IS_SELECTED
            FROM REF_SEGMENT RS
            INNER JOIN REF_SEGMENT_TYPE RST
                ON RST.SEGMENT_TYPE_ID = RS.SEGMENT_TYPE_ID
            LEFT JOIN (
                SELECT SEGMENT_ID
                FROM REF_SEGMENT
                WHERE (SEGMENT_AIRBYTE AND (SELECT TARGET_SEGMENT_AIRBYTE FROM PR_PROJECT WHERE PROJECT_ID = :IN_PROJECT_ID)) > 0
                  AND SEGMENT_TYPE_ID = 4
            ) RSC ON RS.SEGMENT_ID = RSC.SEGMENT_ID
            WHERE RS.SEGMENT_ID <= 10
            ORDER BY CASE RST.SEGMENT_TYPE_ID WHEN 3 THEN 4 WHEN 4 THEN 3 END);

    ELSE

        IF (:V_SEGMENT = 10) THEN
            RES :=
                (SELECT RS.SEGMENT_ID, RS.SEGMENT_NAME, RST.SEGMENT_TYPE_ID, RST.DESCRIPTION, RS.SEGMENT_AIRBYTE,
                       CASE WHEN RS.SEGMENT_ID = 10 THEN 1 ELSE 0 END AS IS_SELECTED
                FROM REF_SEGMENT RS
                INNER JOIN REF_SEGMENT_TYPE RST
                    ON RST.SEGMENT_TYPE_ID = RS.SEGMENT_TYPE_ID
                WHERE RS.SEGMENT_ID <= 10
                ORDER BY CASE RST.SEGMENT_TYPE_ID WHEN 3 THEN 4 WHEN 4 THEN 3 END);
        ELSE
            RES :=
                (SELECT RS.SEGMENT_ID, RS.SEGMENT_NAME, RST.SEGMENT_TYPE_ID, RST.DESCRIPTION, RS.SEGMENT_AIRBYTE,
                       CASE WHEN RSC.COMPONENT_SEGMENT_ID IS NOT NULL THEN 1 ELSE 0 END AS IS_SELECTED
                FROM REF_SEGMENT RS
                INNER JOIN REF_SEGMENT_TYPE RST
                    ON RST.SEGMENT_TYPE_ID = RS.SEGMENT_TYPE_ID
                LEFT JOIN (
                    SELECT COMPONENT_SEGMENT_ID
                    FROM REF_SEGMENT_COMPONENT
                    WHERE SEGMENT_ID = (
                        SELECT CASE
                            WHEN IS_SEGMENT_COMPUTED = 'N' THEN
                                CASE
                                    WHEN TARGET_SEGMENT = 1 THEN 1
                                    WHEN TARGET_SEGMENT = 2 THEN 11
                                    WHEN TARGET_SEGMENT = 3 THEN 21
                                    WHEN TARGET_SEGMENT = 4 THEN 31
                                    WHEN TARGET_SEGMENT = 5 THEN 10
                                    ELSE TARGET_SEGMENT
                                END
                            ELSE TARGET_SEGMENT
                        END
                        FROM PR_PROJECT
                        WHERE PROJECT_ID = :IN_PROJECT_ID
                    )
                ) RSC ON RS.SEGMENT_ID = RSC.COMPONENT_SEGMENT_ID
                WHERE RS.SEGMENT_ID <= 10
                ORDER BY CASE RST.SEGMENT_TYPE_ID WHEN 3 THEN 4 WHEN 4 THEN 3 END);
        END IF;
    END IF;

    RETURN TABLE(RES);
END;

GRANT USAGE ON PROCEDURE PKG_PROMO_UI_GET_SEGMENT_DROPDOWN(INT) TO ROLE RA_PROMO_DEV_QA_UAT_ACCESS;
GRANT USAGE ON PROCEDURE PKG_PROMO_UI_GET_SEGMENT_DROPDOWN(INT) TO ROLE RA_PROMO_PROD_ACCESS;