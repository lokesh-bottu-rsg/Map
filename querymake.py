def convert(dic,query):
    for key, value in dic.items():
        try:
            replacement = str(int(value))
        except ValueError:
            replacement = f"'{value}'"
        query = query.replace(':' + key, replacement)
    file_path = 'converted_query.sql'
    with open(file_path, 'w') as file:
        file.write(query)
    print(f"Query has been written to {file_path}.")
dic = {'IN_MEDIA_OUTLET_ID': '96','IN_QTR': '2Q24','IN_OUTPUT_TYPE': '1','IN_PLAN_ID': '398'}
# [params: \'IN_MEDIA_OUTLET_ID: 96\',\'IN_QTR: 1Q23\',\'IN_PLAN_ID: 340\',\'IN_OUTPUT_TYPE: 1\']

query = '''
WITH CTE_PLAN_TYPE AS (
SELECT PP.PERIOD_ID V_PERIOD_ID, IFNULL(PP.PLAN_STATUS_ID,0) V_PLAN_STATUS_ID, PLAN_TYPE AS V_PLAN_TYPE,
CASE WHEN V_PLAN_TYPE=1 THEN 1 WHEN V_PLAN_TYPE = 2 THEN 3 END AS V_MODEL_TYPE
FROM PR_PLAN PP WHERE PLAN_ID= :IN_PLAN_ID
AND MEDIA_OUTLET_ID= :IN_MEDIA_OUTLET_ID LIMIT 1
)  -- SELECT * FROM CTE_PLAN_TYPE;

,CTE_MAX_PLAN_VERSION AS (
SELECT MAX(PLAN_VERSION_ID) AS V_PLAN_VERSION_ID FROM PR_PLAN_VERSION 
WHERE PLAN_ID=:IN_PLAN_ID
) -- SELECT * FROM CTE_MAX_PLAN_VERSION;

,CTE_QTR AS (
SELECT START_DATE AS V_QTR_START_DATE, END_DATE AS V_QTR_END_DATE FROM REF_CAL_PERIOD 
WHERE NAME = :IN_QTR
AND PERIOD_TYPE_CD='Q'  
) -- SELECT * FROM CTE_QTR;
,CTE_FUTURE_PERIOD AS (
SELECT PERIOD_ID AS V_FUTURE_PERIOD_ID FROM REF_CAL_PERIOD 
WHERE START_DATE=(SELECT DATEADD(DAY, 1, END_DATE) FROM REF_CAL_PERIOD WHERE 
PERIOD_ID=(SELECT V_PERIOD_ID FROM CTE_PLAN_TYPE) AND PERIOD_TYPE_CD='Q' LIMIT 1)
AND PERIOD_TYPE_CD='Q' LIMIT 1
) -- SELECT * FROM CTE_FUTURE_PERIOD; 

,CTE_FUTURE_QTR AS (
SELECT END_DATE AS V_FUTURE_QTR_END_DATE FROM REF_CAL_PERIOD WHERE 
PERIOD_ID= (SELECT V_FUTURE_PERIOD_ID FROM CTE_FUTURE_PERIOD)
) -- SELECT * FROM CTE_FUTURE_QTR;

,MAX_PLAN_VERSION AS (
SELECT PLAN_ID, MAX(PLAN_VERSION_ID) PLAN_VERSION_ID FROM MODEL_EXEC M 
WHERE M.MODEL_TYPE_ID=(SELECT V_MODEL_TYPE FROM CTE_PLAN_TYPE)
AND M.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
AND M.EXEC_STATUS_CD='C'
GROUP BY PLAN_ID
)  -- SELECT * FROM MAX_PLAN_VERSION; 
,CTE_WEEKS AS (
SELECT START_DATE WSTART_DATE,END_DATE WEND_DATE,CONCAT('EP_Wek',ROW_NUMBER() OVER (ORDER BY START_DATE)) WEEK
FROM REF_CAL_PERIOD RCP WHERE PERIOD_TYPE_CD = 'W'
AND RCP.START_DATE BETWEEN 
(SELECT V_QTR_START_DATE FROM CTE_QTR) AND (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR)
) -- SELECT * FROM CTE_WEEKS;
,CTE_PRE_FINAL AS (
SELECT 
PP.EPISODE_ID, PP.PROJECT_ID, PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS,PP.ON_MAP_START_DATE,
PP.ON_MAP_END_DATE FROM PR_PLAN_PROJECT_EPISODE PP
WHERE PP.PLAN_ID=:IN_PLAN_ID
AND PP.PLAN_VERSION_ID= (SELECT V_PLAN_VERSION_ID FROM CTE_MAX_PLAN_VERSION) 

UNION

SELECT  
PP.EPISODE_ID, PP.PROJECT_ID, PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS ,PP.ON_MAP_START_DATE,
PP.ON_MAP_END_DATE FROM PR_PLAN_PROJECT_EPISODE PP
JOIN PR_PLAN_SCHEDULE_EPISODE PPS ON PP.PLAN_ID=PPS.PLAN_ID AND PPS.PLAN_VERSION_ID=0 
AND PP.PROJECT_ID=PPS.PROJECT_ID AND PPS.EPISODE_ID=PP.EPISODE_ID
JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.PLAN_TYPE=  (SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE) 
    AND P.MEDIA_OUTLET_ID=  :IN_MEDIA_OUTLET_ID
JOIN MAX_PLAN_VERSION M ON PP.PLAN_ID = M.PLAN_ID
WHERE DATE(PPS.START_DATE) BETWEEN (SELECT V_QTR_START_DATE FROM CTE_QTR) 
    AND  (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR) 
AND PP.PLAN_VERSION_ID = M.PLAN_VERSION_ID
and P.PLAN_ID<> :IN_PLAN_ID
AND PP.CAMPAIGN_GOAL_ID IN (
    SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
    FROM PR_PLAN_SCHEDULE_EPISODE PPS 
    INNER JOIN PR_PLAN_PROJECT_EPISODE PP ON PPS.CAMPAIGN_GOAL_ID=PP.CAMPAIGN_GOAL_ID
    AND PPS.EPISODE_ID=PP.EPISODE_ID
    JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID 
    AND P.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
    AND PPS.START_DATE BETWEEN (SELECT V_QTR_START_DATE FROM CTE_QTR) 
    AND (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR)
    AND P.PLAN_TYPE= (SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE)
    )
GROUP by PP.PROJECT_ID,PP.EPISODE_ID,PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS ,
PP.ON_MAP_START_DATE,PP.ON_MAP_END_DATE 
) 
SELECT CPF.PROJECT_ID,CPF.EPISODE_ID,CPF.CAMPAIGN_GOAL_ID,
TO_CHAR(CPF.EPISODE_START_TS,'MM/DD/YYYY HH12:MI:SS PM') EPISODE_START_TS,
TO_CHAR(CPF.EPISODE_START_TS,'MM/DD/YYYY HH12:MI:SS PM') EPISODE_AIR_DATE_DIS,
TO_CHAR(CPF.ON_MAP_START_DATE,'MM/DD/YYYY') START_TS_DIS,
TO_CHAR(CPF.ON_MAP_END_DATE,'MM/DD/YYYY') END_TS_DIS,
WSTART_DATE,WEEK,UNIT_COUNT UNITS FROM CTE_PRE_FINAL CPF
LEFT JOIN (
SELECT PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,PPS.EPISODE_ID,WSTART_DATE,WEEK,
(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN SUM(PPS.PLANNED_UNITS) ELSE SUM(PPS.PLANNED_GRP) END) UNIT_COUNT
FROM PR_PLAN_SCHEDULE_EPISODE PPS 
JOIN CTE_WEEKS 
JOIN PR_PLAN_PROJECT_EPISODE PPP ON PPS.PLAN_ID=:IN_PLAN_ID 
AND PPS.PLAN_VERSION_ID=0 
AND PPS.START_DATE BETWEEN WSTART_DATE AND WEND_DATE
AND PPS.PLAN_ID=PPP.PLAN_ID AND PPP.PLAN_VERSION_ID= (SELECT V_PLAN_VERSION_ID FROM CTE_MAX_PLAN_VERSION)
AND PPS.PROJECT_ID=PPP.PROJECT_ID AND PPS.EPISODE_ID=PPP.EPISODE_ID
AND CASE WHEN (SELECT V_PERIOD_ID FROM CTE_PLAN_TYPE) > 316 THEN PPP.STATUS_CD IN (9,10) ELSE 1 = 1 END	
GROUP BY PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,PPS.EPISODE_ID,WSTART_DATE,WEEK

UNION	

SELECT PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,PPS.EPISODE_ID,WSTART_DATE,WEEK,
(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN SUM(PLANNED_UNITS) ELSE SUM(PPS.PLANNED_GRP) END) UNIT_COUNT
    FROM PR_PLAN_SCHEDULE_EPISODE PPS
    JOIN CTE_WEEKS
    JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 
    and PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
    AND PROJECT_TYPE= (SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE)
    WHERE PPS.START_DATE BETWEEN WSTART_DATE AND WEND_DATE
    and PPS.PLAN_ID<>:IN_PLAN_ID
    GROUP BY PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,PPS.EPISODE_ID,WSTART_DATE,WEEK
    
UNION
SELECT NULL CAMPAIGN_GOAL_ID,PPPS.PROJECT_ID,PPPS.EPISODE_ID,WSTART_DATE,WEEK,UNIT_COUNT 
    FROM PR_PLAN_PROJECT_SPOTS_EPISODE  PPPS
    JOIN CTE_WEEKS
    JOIN PR_PLAN_PROJECT_EPISODE PPP on PPP.PLAN_ID=PPPS.PLAN_ID and PPP.PLAN_VERSION_ID=PPPS.PLAN_VERSION_ID  
    AND PPP.PROJECT_ID=PPPS.PROJECT_ID AND PPPS.EPISODE_ID=PPP.EPISODE_ID
    WHERE PPPS.PLAN_ID=:IN_PLAN_ID
    AND PPPS.PLAN_VERSION_ID= (SELECT V_PLAN_VERSION_ID FROM CTE_MAX_PLAN_VERSION)
    AND PPP.STATUS_CD NOT IN (9,10) 
    and WEEK_DATE=WSTART_DATE
    GROUP BY CAMPAIGN_GOAL_ID,PPPS.PROJECT_ID,PPPS.EPISODE_ID,WSTART_DATE,WEEK,UNIT_COUNT
    
) FI ON CASE WHEN CPF.CAMPAIGN_GOAL_ID IS NULL THEN CPF.PROJECT_ID = FI.PROJECT_ID AND CPF.EPISODE_ID = FI.EPISODE_ID ELSE CPF.CAMPAIGN_GOAL_ID = FI.CAMPAIGN_GOAL_ID END
ORDER BY CPF.PROJECT_ID,CPF.EPISODE_ID,CPF.CAMPAIGN_GOAL_ID,WSTART_DATE;

'''
convert(dic,query)