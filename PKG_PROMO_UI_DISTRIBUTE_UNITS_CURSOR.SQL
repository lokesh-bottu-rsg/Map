CREATE OR REPLACE PROCEDURE PKG_PROMO_UI_DISTRIBUTE_UNITS(IN_CALL_ID INT)
RETURNS VARCHAR
LANGUAGE SQL AS 
DECLARE 
    V_PREV_PROJECT_ID INT DEFAULT -1;
    V_CUR_PROJECT_ID INT;
    V_DAYS_IN_WEEK INT;
    V_TOTAL_DAYS INT;
    V_TOTAL_SPOTS INT;
    V_SPOTS_ALLOTTED INT;
    V_CALC_BASED_ON VARCHAR(5);
    V_WEEK_DATE DATE;
BEGIN

    CREATE OR REPLACE TEMPORARY TABLE TMP_DISTRIBUTION_DATA AS 
    SELECT TRRC.PROJECT_ID,	TRRC.SPOT_RESULT,RCP.START_DATE,
    CASE WHEN TRRC.FLIGHT_START_DATE < TRRC.QTR_START_DATE 
    THEN DATEDIFF(DAY,TRRC.QTR_START_DATE,(SELECT START_DATE FROM REF_CAL_PERIOD RCP 
                                        WHERE CURRENT_TIMESTAMP() BETWEEN START_DATE AND END_DATE AND PERIOD_TYPE_CD = 'W'))
    ELSE DATEDIFF(DAY,TRRC.FLIGHT_START_DATE,(SELECT START_DATE FROM REF_CAL_PERIOD RCP 
                                        WHERE CURRENT_TIMESTAMP() BETWEEN START_DATE AND END_DATE AND PERIOD_TYPE_CD = 'W')) END ELAPSED_DAYS,
    DATEDIFF(DAY,CASE WHEN TRRC.FLIGHT_START_DATE < TRRC.QTR_START_DATE  
                        THEN TRRC.QTR_START_DATE  ELSE TRRC.FLIGHT_START_DATE END,TRRC.FLIGHT_END_DATE)+1 TOTAL_DAYS,
    7- (CASE WHEN TRRC.FLIGHT_START_DATE > RCP.START_DATE 
            THEN DATEDIFF(DAY,RCP.START_DATE,TRRC.FLIGHT_START_DATE) ELSE 0 END)
            - (CASE WHEN TRRC.FLIGHT_END_DATE < RCP.END_DATE
            THEN DATEDIFF(DAY,TRRC.FLIGHT_END_DATE,RCP.END_DATE) ELSE 0 END) DAYS_IN_WEEK,
    TRRC.CALC_BASED_ON 
    FROM REF_CAL_PERIOD RCP
    JOIN TEMP_REFRESH_REACH_CALCULATION TRRC ON RCP.START_DATE <= TRRC.FLIGHT_END_DATE AND RCP.PERIOD_TYPE_CD='W' AND TRRC.CALL_ID = :IN_CALL_ID
    AND TRRC.CALC_BASED_ON NOT IN  ('S', 'ES')
    AND RCP.END_DATE >= CASE WHEN TRRC.FLIGHT_START_DATE < TRRC.QTR_START_DATE 
                THEN TRRC.QTR_START_DATE  ELSE TRRC.FLIGHT_START_DATE END
    JOIN PR_PROJECT PP ON PP.PROJECT_ID = TRRC.PROJECT_ID;

    LET C1 CURSOR FOR SELECT PROJECT_ID,SPOT_RESULT,TOTAL_DAYS,DAYS_IN_WEEK,START_DATE,CALC_BASED_ON FROM TMP_DISTRIBUTION_DATA;
    OPEN C1;
    FOR R1 IN C1 DO

        SET V_CUR_PROJECT_ID := R1.PROJECT_ID;
        SET V_DAYS_IN_WEEK := R1.DAYS_IN_WEEK;
        SET V_CALC_BASED_ON := R1.CALC_BASED_ON;
        SET V_WEEK_DATE := R1.START_DATE;

        IF (:V_CUR_PROJECT_ID <> :V_PREV_PROJECT_ID) THEN -- RESETTING THE SPOTS FOR THE EVERY NEW PROJECT

            SET V_TOTAL_SPOTS := R1.SPOT_RESULT;
            SET V_TOTAL_DAYS  := R1.TOTAL_DAYS;
        
        END IF;

        IF (:V_CALC_BASED_ON NOT IN ('ER', 'EG')) THEN

            SET V_SPOTS_ALLOTTED := FLOOR((:V_TOTAL_SPOTS * :V_DAYS_IN_WEEK) / :V_TOTAL_DAYS);


            INSERT INTO TMP_PROJECT_DISTRIBUTION (CALL_ID,PROJECT_ID,WEEK_DATE,UNIT_COUNT) 
            VALUES(:IN_CALL_ID,:V_CUR_PROJECT_ID,:V_WEEK_DATE,CASE WHEN :V_SPOTS_ALLOTTED <0 THEN 0 ELSE :V_SPOTS_ALLOTTED END);
            
            SET V_TOTAL_SPOTS := (:V_TOTAL_SPOTS - :V_SPOTS_ALLOTTED);
            SET V_TOTAL_DAYS := (:V_TOTAL_DAYS - :V_DAYS_IN_WEEK);

        ELSE 

            INSERT INTO TMP_PROJECT_DISTRIBUTION (CALL_ID,PROJECT_ID,WEEK_DATE,UNIT_COUNT)
			VALUES (:IN_CALL_ID,:V_CUR_PROJECT_ID,:V_WEEK_DATE,:V_TOTAL_SPOTS);

        END IF;

        SET V_PREV_PROJECT_ID := V_CUR_PROJECT_ID;

    END FOR;
    
RETURN 'SUCCESS';
END;

GRANT USAGE ON PROCEDURE PKG_PROMO_UI_DISTRIBUTE_UNITS(INT) TO ROLE RA_PROMO_DEV_QA_UAT_ACCESS;
GRANT USAGE ON PROCEDURE PKG_PROMO_UI_DISTRIBUTE_UNITS(INT) TO ROLE RA_PROMO_PROD_ACCESS;