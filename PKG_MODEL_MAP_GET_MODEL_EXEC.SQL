CREATE OR REPLACE PROCEDURE PKG_MODEL_MAP_GET_MODEL_EXEC(IN_TYPE VARCHAR(25))
RETURNS TABLE (MODEL_EXEC_ID INT, SERVER_PATH VARCHAR, SERVER_ID NUMBER(38,0))
LANGUAGE SQL AS 
DECLARE 
    V_MODEL_EXEC_ID INT;
    V_LICENSE_ID INT;
    V_SERVER_ID INT;
    V_MODEL_TYPE INT;
    RES RESULTSET;
BEGIN

    SET V_MODEL_TYPE := CASE WHEN :IN_TYPE='MAP' THEN 1
							WHEN :IN_TYPE='SCHED' THEN 2
                            WHEN :IN_TYPE='MAP2E' THEN 3
                            WHEN :IN_TYPE='SCHED2E' THEN 4
                        ELSE 1 END;
	
    UPDATE MODEL_SERVER SET ACTIVE_YN='Y'
	WHERE ABS(TIMEDIFF(SECOND,IFNULL(IN_USE_SINCE_DATE,CURRENT_TIMESTAMP()),CURRENT_TIMESTAMP)) > 2000
	AND ACTIVE_YN='N';
    
    IF ((SELECT COUNT(1) FROM MODEL_EXEC WHERE EXEC_STATUS_CD = 'P' 
        AND LICENSE_ID IS NULL AND MODEL_TYPE_ID =:V_MODEL_TYPE) > 0) THEN      
		
        IF ((SELECT COUNT(1) FROM MODEL_LICENSE WHERE IN_USE_YN = 'N' AND SERVER_ID IN 
            (SELECT SERVER_ID FROM MODEL_SERVER WHERE ACTIVE_YN = 'Y')) > 0) THEN    
			
            START TRANSACTION;
			
				SELECT MIN(LICENSE_ID) INTO :V_LICENSE_ID FROM MODEL_LICENSE WHERE IN_USE_YN = 'N' AND
                IN_USE_SINCE_DT =(
					SELECT MIN(IN_USE_SINCE_DT) FROM MODEL_LICENSE WHERE IN_USE_YN = 'N'
                ) AND SERVER_ID IN (
					SELECT SERVER_ID FROM MODEL_SERVER WHERE ACTIVE_YN = 'Y'
                );
                
                SELECT SERVER_ID INTO :V_SERVER_ID FROM MODEL_LICENSE WHERE LICENSE_ID = :V_LICENSE_ID;
                
				SELECT MIN(MODEL_EXEC_ID) INTO :V_MODEL_EXEC_ID FROM MODEL_EXEC 
				WHERE EXEC_STATUS_CD = 'P' AND LICENSE_ID IS NULL AND MODEL_TYPE_ID= :V_MODEL_TYPE;                
				
				IF((SELECT IN_USE_YN FROM MODEL_LICENSE WHERE LICENSE_ID=:V_LICENSE_ID) = 'N') THEN 
					
					IF((SELECT LICENSE_ID FROM MODEL_EXEC WHERE MODEL_EXEC_ID= :V_MODEL_EXEC_ID) IS NULL) THEN
                    
						UPDATE MODEL_EXEC SET LICENSE_ID= :V_LICENSE_ID,EXEC_START_DT=CURRENT_TIMESTAMP() 
                        WHERE MODEL_EXEC_ID=:V_MODEL_EXEC_ID;
                        
						UPDATE MODEL_LICENSE SET IN_USE_YN ='Y',IN_USE_SINCE_DT = CURRENT_TIMESTAMP() 
                        WHERE LICENSE_ID = :V_LICENSE_ID;
                        
                        UPDATE MODEL_SERVER SET IN_USE_SINCE_DATE = CURRENT_TIMESTAMP() WHERE SERVER_ID = :V_SERVER_ID;
					ELSE 
						SET V_MODEL_EXEC_ID := 0;    
					END IF;
                    
				ELSE 
				  SET V_MODEL_EXEC_ID := 0;    
				END IF;
        
        ELSE
			SET V_MODEL_EXEC_ID := 0;        
        END IF; 

    ELSE
		SET V_MODEL_EXEC_ID := -1;        
        
        UPDATE MODEL_LICENSE SET IN_USE_YN='N'
       
        WHERE ABS(TIMEDIFF(SECOND,CURRENT_TIMESTAMP(),ifnull(IN_USE_SINCE_DT,CURRENT_TIMESTAMP))) > 2000
		AND IN_USE_YN='Y';
        COMMIT;        
    END IF;
   
    IF (:V_MODEL_EXEC_ID IS NOT NULL AND :V_MODEL_EXEC_ID > 0) THEN        				
        IF(:V_MODEL_TYPE = 2) THEN
			UPDATE PR_LOG_VERSION SET STATUS=2,MODEL_EXEC_ID=:V_MODEL_EXEC_ID WHERE 
            LOG_VERSION_ID=(SELECT PLAN_VERSION_ID FROM MODEL_EXEC WHERE MODEL_EXEC_ID= :V_MODEL_EXEC_ID limit 1);
        END IF;
        RES := (SELECT :V_MODEL_EXEC_ID AS MODEL_EXEC_ID,SERVER_PATH, :V_SERVER_ID AS SERVER_ID FROM MODEL_LICENSE 
        WHERE LICENSE_ID= :V_LICENSE_ID);
    ELSE
		RES := (SELECT :V_MODEL_EXEC_ID AS MODEL_EXEC_ID, NULL AS SERVER_PATH, NULL::INT AS SERVER_ID);
	END IF;
RETURN TABLE (RES);
END;

GRANT USAGE ON PROCEDURE PKG_MODEL_MAP_GET_MODEL_EXEC(VARCHAR) TO ROLE RA_PROMO_DEV_QA_UAT_ACCESS;
GRANT USAGE ON PROCEDURE PKG_MODEL_MAP_GET_MODEL_EXEC(VARCHAR) TO ROLE RA_PROMO_PROD_ACCESS;