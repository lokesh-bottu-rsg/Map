module.exports = {
	editableMapQuery: {
		getUserNetworks: `
						WITH CTE_NO_USER AS (
						SELECT RMO.MEDIA_OUTLET_ID, RMO.NAME , RMO.EXTERNAL_SHORT_NAME, RMO.SHORT_NAME, RMO.CABLE_NETWORK_ID, 
						CASE WHEN RMO.RATED_NETWORK_YN='Y' AND RMO.IS_STREAMING_YN='N' THEN 'RATED' 
						WHEN RMO.RATED_NETWORK_YN='N' AND RMO.IS_STREAMING_YN='N' THEN 'NON-RATED' 
						WHEN RMO.RATED_NETWORK_YN='N' AND RMO.IS_STREAMING_YN='Y' THEN 'STREAMING' 
						ELSE 'RATED' END AS MEDIA_OUTLET_TYPE 
						FROM REF_MEDIA_OUTLET RMO 
						WHERE  RMO.MEDIA_OUTLET_ID > 0 AND :IN_USER_ID=-1
						-- ORDER BY RMO.SHORT_NAME

					UNION

						SELECT RMO.MEDIA_OUTLET_ID, RMO.NAME , RMO.EXTERNAL_SHORT_NAME, RMO.SHORT_NAME, RMO.CABLE_NETWORK_ID, 
						CASE WHEN RMO.RATED_NETWORK_YN='Y' AND RMO.IS_STREAMING_YN='N' THEN 'RATED' 
						WHEN RMO.RATED_NETWORK_YN='N' AND RMO.IS_STREAMING_YN='N' THEN 'NON-RATED' 
						WHEN RMO.RATED_NETWORK_YN='N' AND RMO.IS_STREAMING_YN='Y' THEN 'STREAMING' 
						ELSE 'RATED' END AS MEDIA_OUTLET_TYPE 
						FROM SEC_USER_MEDIA_OUTLET SUMO 
						JOIN REF_MEDIA_OUTLET RMO 
						ON SUMO.MEDIA_OUTLET_ID = RMO.MEDIA_OUTLET_ID 
						WHERE SUMO.USER_ID = :IN_USER_ID
						AND RMO.MEDIA_OUTLET_ID > 0
						ORDER BY SHORT_NAME
					
			)
			SELECT * FROM CTE_NO_USER;`,

		getClusterNetworks: `
							WITH CTE_NETWORK_ID AS(
							select MEDIA_OUTLET_ID from SEC_DIVISION_NETWORK where DIVISION_ID in 
							(select DIVISION_ID from SEC_DIVISION_NETWORK SDN
							where MEDIA_OUTLET_ID= :IN_MEDIA_OUTLET_ID AND ACTIVE_YN='Y' 
							and DIVISION_ID not in 
							(select DIVISION_ID from SEC_DIVISION where INCLUDE_IN_CLUSTER='N' AND ACTIVE_YN='Y'))
							AND ACTIVE_YN='Y'
					)
					,CTE_MEDIA_OUTLET_ID AS (
							select RMO.MEDIA_OUTLET_ID ,
							case when T.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID then 1 when T.MEDIA_OUTLET_ID is null then 3 else 2 end CLUSTER_ID
							from REF_MEDIA_OUTLET RMO 
							LEFT JOIN CTE_NETWORK_ID T on T.MEDIA_OUTLET_ID=RMO.MEDIA_OUTLET_ID 
							where RMO.MEDIA_OUTLET_ID >0
					)
					,CTE_CLUSTER AS(
							SELECT :IN_USER_ID AS USER_ID,TT.MEDIA_OUTLET_ID, RC.CLUSTER_ID,RC.CLUSTER_NAME FROM REF_CLUSTER RC 
							JOIN CTE_MEDIA_OUTLET_ID TT ON RC.CLUSTER_ID=TT.CLUSTER_ID
							order by RC.CLUSTER_ID ASC
					)
					SELECT * FROM CTE_CLUSTER;`,

		getProjectDropdown: `
							WITH CTE_PARAM AS(
							SELECT VALUE::INT AS MEDIA_OUTLET_ID
							FROM TABLE(SPLIT_TO_TABLE(:IN_MEDIA_OUTLET_ID, ','))
					)
					,CTE_PLAN_ID AS(
								SELECT IFNULL(PLAN_ID,0) AS PLAN_ID,PLAN_STATUS_ID AS OPTIMIZATION_STATUS 
								FROM PR_PLAN PR 
								WHERE PERIOD_ID=
										(SELECT PP.PERIOD_ID 
										FROM REF_CAL_PERIOD PP 
										WHERE PP.NAME=:IN_QTR and PERIOD_TYPE_CD='Q' LIMIT 1) 
								AND PR.MEDIA_OUTLET_ID=:IN_PRIMARY_CHANNEL AND ACTIVE_YN='Y' and PLAN_TYPE =:IN_PROJECT_TYPE  LIMIT 1
					)
					,CTE_VERSION_ID AS (
								select  CASE WHEN CI.OPTIMIZATION_STATUS<>3 THEN MAX(PLAN_VERSION_ID)-1 
								ELSE MAX(PLAN_VERSION_ID) END AS PLAN_VERSION_ID 
								from PR_PLAN_VERSION PPV
								JOIN CTE_PLAN_ID CI ON 1=1
								where PPV.PLAN_ID=CI.PLAN_ID
								GROUP BY CI.OPTIMIZATION_STATUS
					)
					,CTE_DEMO AS(
								SELECT DEMO_ID AS NETWORK_DEFAULT_DEMO_ID,NAME AS NETWORK_DEFAULT_DEMO_NAME 
								FROM REF_DEMO WHERE DEMO_ID =
										(SELECT DEMO_ID FROM REF_MEDIA_OUTLET_DEMO RMO
										JOIN CTE_PARAM CP ON 1=1
										WHERE RMO.MEDIA_OUTLET_ID = CP.MEDIA_OUTLET_ID
										AND DEFAULT_YN='Y' LIMIT 1)
					)
					,CTE_PROJECT_DETAIL AS(
								SELECT 	PROJECT_ID, 
									PP.NAME AS PROJECT_NAME, 
									PP.START_DATE AS PROJECT_START_DATE, 
									PP.END_DATE AS PROJECT_END_DATE, 
									PP.PREMIERE_DATE AS PREMIERE_DATE, 
									PP.PRIORITY,
									PP.PLAN_ID,
									PP.TARGET_DEMO_ID,
									PP.TARGET_SEGMENT, 
									PP.TARGET_FREQUENCY, 
									PP.TARGET_REACH, 
									PP.TARGET_GRP, 
									PP.CREATED_USER, 
									PP.MEDIA_OUTLET_ID,
									PP.CAMPAIGN_TYPE_ID AS TYPE_ID,
									CEIL(CASE WHEN DATEDIFF(DAY,DATE(PP.START_DATE),DATE(PP.END_DATE))=0 then 1 else DATEDIFF(DAY,DATE(PP.START_DATE),DATE(PP.END_DATE)) END /7) AS NO_OF_WEEKS,
									PP.USER_COMMENT,
									PP.SCATTER_IMPS,
									PP.EVENT_TYPE_ID,
									ET.EVENT_TYPE_NAME AS EVENT_NAME,
									PP.SUBEVENT_ID,
									ETS.SUBEVENT_NAME,
									PP.IS_EPISODIC
									FROM PR_PROJECT PP 
									LEFT JOIN REF_2E_EVENT_TYPE ET ON PP.EVENT_TYPE_ID=ET.EVENT_TYPE_ID
									LEFT JOIN REF_2E_EVENT_SUBTYPE_PROJECT ETS ON PP.SUBEVENT_ID=ETS.SUBEVENT_ID
									WHERE PP.MEDIA_OUTLET_ID IN (SELECT MEDIA_OUTLET_ID FROM CTE_PARAM) AND PP.IS_ACTIVE='Y' AND PP.PROJECT_TYPE=:IN_PROJECT_TYPE
									AND CASE WHEN :IN_PROJECT_TYPE = 2 THEN PP.SUBEVENT_ID IN (SELECT SUBEVENT_ID FROM REF_2E_EVENT_SUBTYPE_PROJECT WHERE OPTIMIZATION_TYPE='O') -- (1,2) 
									ELSE 1=1 END
					)	
					,CTE_CROSS_QTR_FLAG AS(
								select distinct P.NAME AS PLAN_NAME,PPP.PROJECT_ID from PR_PLAN_PROJECT PPP 
								JOIN CTE_PLAN_ID CP ON 1=1
								JOIN CTE_PROJECT_DETAIL CPT ON PPP.PROJECT_ID=CPT.PROJECT_ID
								JOIN PR_PLAN P on PPP.PLAN_ID=P.PLAN_ID and P.MEDIA_OUTLET_ID=:IN_PRIMARY_CHANNEL and PPP.PROJECT_ID=CPT.PROJECT_ID 
								AND P.PLAN_TYPE = :IN_PROJECT_TYPE
								AND P.ACTIVE_YN = 'Y' 
								and P.PLAN_ID <> ifnull(CP.PLAN_ID,0)
								and PPP.PLAN_VERSION_ID = (
								select MAX(PLAN_VERSION_ID) from PR_PLAN_VERSION PPV where PLAN_ID=P.PLAN_ID
								)
					)
					,CTE_SECONDARY_VERSION AS (
								SELECT PPP.PROJECT_ID, PPP.PLAN_ID, MAX(PPP.PLAN_VERSION_ID) PLAN_VERSION_ID FROM PR_PLAN_PROJECT PPP 
								INNER JOIN PR_PROJECT PP ON PPP.PROJECT_ID=PP.PROJECT_ID 
								JOIN CTE_PLAN_ID CI ON 1=1
								AND PPP.PLAN_ID = CI.PLAN_ID WHERE PPP.OPTIMIZE_YN='Y' AND PP.PROJECT_TYPE=:IN_PROJECT_TYPE
								AND CASE WHEN :IN_PROJECT_TYPE=2 THEN PP.SUBEVENT_ID IN (SELECT SUBEVENT_ID FROM REF_2E_EVENT_SUBTYPE_PROJECT WHERE OPTIMIZATION_TYPE='O') -- (1,2) 
								ELSE 1=1 END
								GROUP BY PPP.PROJECT_ID, PPP.PLAN_ID
					)
					,CTE_QTR_DETAIL AS(
							SELECT PD.*, 
							RCP.NAME AS QUARTER_NAME, 
							RCP.START_DATE AS QUARTER_START_DATE, 
							RCP.END_DATE AS QUARTER_END_DATE,  
							RD.NAME AS DEMO_NAME,
							RS.SEGMENT_ID,
							RS.SEGMENT_NAME,
							RMO.SHORT_NAME AS MEDIA_OUTLET_NAME, 
							RCT.NAME AS CAMPAIGN_TYPE, 
							RCT.display_seq as display_seq,
							CQ.PLAN_NAME,
							CASE WHEN :IN_PROJECT_TYPE=1 
							THEN( 	
										CASE WHEN PD.TARGET_DEMO_ID IS NULL THEN 4 
										ELSE 
										CASE WHEN PD.TARGET_SEGMENT IS NULL THEN 4 
										ELSE
										CASE WHEN PD.TARGET_FREQUENCY IS NULL THEN 4 ELSE 0
										END
										END
										END
								)
							WHEN :IN_PROJECT_TYPE=2 THEN
								(
									CASE WHEN PD.TARGET_DEMO_ID IS NULL THEN 4 ELSE 0 END
								) END AS TARGET_METRICS_CHK,
							CASE WHEN PD.PREMIERE_DATE<>PD.PROJECT_END_DATE THEN 5 ELSE 0 END AS PREMIERE_DATE_CHK,
							0 AS NRH_CHK,
							CASE WHEN CQ.PLAN_NAME IS NOT NULL THEN 7 ELSE 0 END  AS CROSS_QTR_CHK, 
							IFNULL(OPT_TYPE.OPTIMIZATION_TYPE,-1) AS OPTIMIZATION_TYPE_CHK
							FROM CTE_PROJECT_DETAIL PD
							LEFT JOIN CTE_CROSS_QTR_FLAG CQ ON PD.PROJECT_ID=CQ.PROJECT_ID
							JOIN REF_CAL_PERIOD RCP ON date(PD.PROJECT_START_DATE) between RCP.START_DATE and RCP.END_DATE AND RCP.NAME = :IN_QTR AND RCP.PERIOD_TYPE_CD = 'Q' 
							LEFT JOIN REF_MEDIA_OUTLET RMO ON RMO.MEDIA_OUTLET_ID= PD.MEDIA_OUTLET_ID
							LEFT JOIN REF_CAMPAIGN_TYPE RCT ON RCT.CAMPAIGN_TYPE_ID=PD.TYPE_ID
							LEFT JOIN REF_DEMO RD ON RD.DEMO_ID=PD.TARGET_DEMO_ID
							LEFT JOIN REF_SEGMENT RS ON RS.SEGMENT_ID=PD.TARGET_SEGMENT
							LEFT JOIN PR_PLAN PL ON PL.PLAN_ID=PD.PLAN_ID
							LEFT JOIN 
							(
									SELECT DS.PROJECT_ID, 
									case when T.PROJECT_ID is null then null else  PPV.OPTIMIZATION_TYPE end OPTIMIZATION_TYPE
									FROM PR_PLAN_VERSION PPV 
									INNER JOIN CTE_SECONDARY_VERSION DS ON PPV.PLAN_ID=DS.PLAN_ID AND PPV.PLAN_VERSION_ID=DS.PLAN_VERSION_ID
							LEFT JOIN 
							(
							select PROJECT_ID from PR_PLAN_PROJECT PP
							JOIN CTE_PLAN_ID CI ON 1=1
							JOIN CTE_VERSION_ID CV ON 1=1
							where PP.PLAN_ID=CI.PLAN_ID and PP.PLAN_VERSION_ID=CV.PLAN_VERSION_ID
							)T ON DS.PROJECT_ID=T.PROJECT_ID
							) OPT_TYPE ON  OPT_TYPE.PROJECT_ID=PD.PROJECT_ID
							ORDER BY PROJECT_NAME ASC
					)
					,CTE_VALIDATION_MSG AS (
						SELECT 
							CQ.*, 
							RV1.VALIDATION_MESSAGE AS TARGET_METRICS_CHK_MSG,
							RV2.VALIDATION_MESSAGE AS PREMIERE_DATE_CHK_MSG,
							RV3.VALIDATION_MESSAGE AS NRH_CHK_MSG,
							REPLACE(RV4.VALIDATION_MESSAGE, '<>', CQ.PLAN_NAME) AS CROSS_QTR_CHK_MSG,
							CD.NETWORK_DEFAULT_DEMO_NAME AS NETWORK_DEFAULT_DEMO,
							CD.NETWORK_DEFAULT_DEMO_ID AS NETWORK_DEFAULT_DEMO_ID
						FROM 
							CTE_QTR_DETAIL CQ
						JOIN 
							CTE_DEMO CD ON 1 = 1
						LEFT JOIN 
							REF_MAP_VALIDATION RV1 ON RV1.VALIDATION_ID = CQ.TARGET_METRICS_CHK
						LEFT JOIN 
							REF_MAP_VALIDATION RV2 ON RV2.VALIDATION_ID = CQ.PREMIERE_DATE_CHK
						LEFT JOIN 
							REF_MAP_VALIDATION RV3 ON RV3.VALIDATION_ID = CQ.NRH_CHK
						LEFT JOIN 
							REF_MAP_VALIDATION RV4 ON RV4.VALIDATION_ID = CQ.CROSS_QTR_CHK
					)
					SELECT * FROM CTE_VALIDATION_MSG;`,

		getFrequencyDropdown: `
							SELECT DISTINCT FREQUENCY_ID,FREQUENCY AS NAME 
					FROM REF_MEDIA_OUTLET_FREQUENCY 
					WHERE MEDIA_OUTLET_ID = 
					CASE :IN_MEDIA_OUTLET_ID WHEN -1 THEN MEDIA_OUTLET_ID ELSE :IN_MEDIA_OUTLET_ID END;   `,

		getQuarterDropdown: `
							WITH CTE_PERIOD_ID AS(
								SELECT PERIOD_ID FROM REF_CAL_PERIOD WHERE CURRENT_TIMESTAMP() between start_date and end_date and PERIOD_TYPE_CD='Q'
					)
					,CTE_START_DATE AS (
								select start_date from REF_CAL_PERIOD where DATEADD(DAY,-95,CURRENT_DATE) between start_date and end_date and PERIOD_TYPE_CD='Q'
					)
					,CTE_END_DATE AS (
								select end_date from REF_CAL_PERIOD RF
								JOIN CTE_PERIOD_ID CI ON 1=1
								where RF.PERIOD_ID=CI.PERIOD_ID+4 AND PERIOD_TYPE_CD='Q'
					)
							SELECT 
							RCP.PERIOD_ID, 
							RCP.START_DATE,
							RCP.END_DATE,
							RCP.PERIOD_TYPE_CD,
							RCP.NAME,
							RCP.FISCAL_QTR
							FROM REF_CAL_PERIOD RCP
							JOIN CTE_START_DATE CS ON 1=1
							JOIN CTE_END_DATE CE ON 1=1
							WHERE RCP.PERIOD_TYPE_CD = 'Q' 
							AND RCP.start_date>=CS.start_date and RCP.end_date<=CE.end_date order by start_Date;`,

		getDemoTypes: `
					SELECT RD.DEMO_ID, 
			RD.NAME DEMO_TYPE_NAME, 
			RMOD.ACTIVE_YN,
			RMOD.DEFAULT_YN, 
			RMOD.MEDIA_OUTLET_ID
			FROM REF_DEMO RD, 
			REF_MEDIA_OUTLET_DEMO RMOD
			WHERE RD.DEMO_ID = RMOD.DEMO_ID
			AND RMOD.MEDIA_OUTLET_ID = CASE WHEN :IN_MEDIA_OUTLET_ID is null THEN RMOD.MEDIA_OUTLET_ID else :IN_MEDIA_OUTLET_ID end 
			AND RMOD.ACTIVE_YN = 'Y'
			ORDER BY DEMO_TYPE_NAME;`,

		getEpisodicPhase: `
						SELECT 
				TYPE_ID AS PH_TYPE_ID,
				DESCRIPTION,
				IS_ACTIVE
				FROM REF_PROJECT_PLAN_TYPE 
				WHERE IS_ACTIVE = 'Y' ORDER BY DISPLAY_SEQ ASC;`,

		clientQuery: {
			ANE: {
				getPlanDataForOptimization: `
										WITH CTE_PLAN_STATUS AS(
													SELECT PP.PERIOD_ID AS V_PERIOD_ID, IFNULL(PP.PLAN_STATUS_ID,0) AS V_PLAN_STATUS_ID,PP.PLAN_TYPE AS  V_PLAN_TYPE 
													FROM PR_PLAN PP 
													WHERE PP.PLAN_ID=:IN_PLAN_ID AND PP.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID LIMIT 1
									)
									,CTE_PLAN_TYPE AS(
													select case when CP.V_PLAN_TYPE=1 then 1 when CP.V_PLAN_TYPE = 2 then 3 end AS V_MODEL_TYPE FROM CTE_PLAN_STATUS CP
									)
									,CTE_DEMO AS(
													SELECT ROD.DEMO_ID AS V_NETWORK_TARGET_DEMO_ID,RD.NAME AS V_NETWORK_TARGET_DEMO_NAME 
													FROM REF_MEDIA_OUTLET_DEMO ROD JOIN REF_DEMO RD on ROD.DEMO_ID=RD.DEMO_ID
													where ROD.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID and ACTIVE_YN='Y' and DEFAULT_YN='Y'
									)  
									,CTE_VERSION_ID AS(
													SELECT MAX(PLAN_VERSION_ID) AS V_PLAN_VERSION_ID 
													FROM PR_PLAN_VERSION PR
													WHERE PR.PLAN_ID=:IN_PLAN_ID
									)
									,CTE_PAST_PLANID AS(
													SELECT PP.PLAN_ID AS V_PAST_PLAN_ID FROM PR_PLAN PP
													JOIN CTE_PLAN_STATUS CS ON 1=1 
													WHERE PERIOD_ID=(
													SELECT PP.PERIOD_ID-1 FROM PR_PLAN PP
													JOIN CTE_PLAN_STATUS CS ON 1=1
													WHERE PP.PLAN_ID=:IN_PLAN_ID AND PP.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID AND PP.PLAN_TYPE=CS.V_PLAN_TYPE LIMIT 1) 
													AND PP.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID AND ACTIVE_YN='Y' AND PP.PLAN_TYPE=CS.V_PLAN_TYPE
									)
									,CTE_PAST_VERSIONID AS(
													SELECT IFNULL(MAX(PLAN_VERSION_ID),0) AS V_PAST_PLAN_VERSION_ID FROM MODEL_EXEC ME
													JOIN CTE_PAST_PLANID CP ON 1=1
													WHERE ME.PLAN_ID=CP.V_PAST_PLAN_ID AND EXEC_STATUS_CD='C'
									)
									,CTE_QTR_DATE AS(
													SELECT START_DATE AS V_QTR_START_DATE, END_DATE AS V_QTR_END_DATE 
													FROM REF_CAL_PERIOD RC
													WHERE RC.NAME =:IN_QTR AND PERIOD_TYPE_CD='Q'
									)
									,CTE_WEEK_DATE AS(
													SELECT START_DATE AS V_WEEK_START_DATE, END_DATE AS V_WEEK_END_DATE,ROW_NUMBER() OVER (ORDER BY END_DATE) AS WEEK_COUNT
													FROM REF_CAL_PERIOD WHERE FISCAL_QTR IN (
													SELECT FISCAL_QTR FROM REF_CAL_PERIOD RF JOIN CTE_PLAN_STATUS CS ON 1=1
													WHERE PERIOD_ID IN (CS.V_PERIOD_ID, CS.V_PERIOD_ID+1)) AND PERIOD_TYPE_CD='W' ORDER BY END_DATE ASC LIMIT 26
									)
									,MAX_PLAN_VERSION AS(
													select M.PLAN_ID, MAX(PLAN_VERSION_ID) PLAN_VERSION_ID from MODEL_EXEC M 
													JOIN CTE_PLAN_TYPE CT ON 1=1
													where M.MODEL_TYPE_ID=CT.V_MODEL_TYPE
													and M.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID and M.EXEC_STATUS_CD='C'
													group by M.PLAN_ID
									)
									,CTE_CAMPAIGN_ID AS(
													SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
													FROM PR_PLAN_SCHEDULE PPS 
													JOIN CTE_PLAN_STATUS CS ON 1=1
													JOIN CTE_QTR_DATE CQ ON 1=1
													INNER JOIN PR_PLAN_PROJECT PP ON PPS.CAMPAIGN_GOAL_ID=PP.CAMPAIGN_GOAL_ID
													JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID 
													AND PPS.START_DATE BETWEEN  CQ.V_QTR_START_DATE  AND  CQ.V_QTR_END_DATE  
													AND P.PLAN_TYPE=CS.V_PLAN_TYPE
									)
									,CTE_EPISODE_CAMPAIGN AS(
													SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
													FROM PR_PLAN_SCHEDULE_EPISODE PPS 
													JOIN CTE_PLAN_STATUS CS ON 1=1
													JOIN CTE_QTR_DATE CQ ON 1=1
													INNER JOIN PR_PLAN_PROJECT PP ON PPS.CAMPAIGN_GOAL_ID=PP.CAMPAIGN_GOAL_ID
													JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID 
													AND PPS.START_DATE BETWEEN  CQ.V_QTR_START_DATE  AND  CQ.V_QTR_END_DATE  
													AND P.PLAN_TYPE=CS.V_PLAN_TYPE
									)
									,EXCLUDED_PROJECTS AS (
													SELECT DISTINCT PROJECT_ID from PR_PLAN_SCHEDULE PPS 
													JOIN CTE_QTR_DATE CQ ON 1=1
													JOIN CTE_PLAN_STATUS CS ON 1=1
													JOIN PR_PLAN P on PPS.PLAN_ID=P.PLAN_ID 
													AND P.PLAN_TYPE=CS.V_PLAN_TYPE and PPS.MEDIA_OUTLET_ID=P.MEDIA_OUTLET_ID
													where P.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID AND START_DATE BETWEEN CQ.V_QTR_START_DATE AND CQ.V_QTR_END_DATE
									)
									,CAMPAIGN_GOALS AS (
													SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
													FROM PR_PLAN_SCHEDULE_EPISODE PPS
													INNER JOIN PR_PLAN_PROJECT_EPISODE PP 
														ON PPS.CAMPAIGN_GOAL_ID = PP.CAMPAIGN_GOAL_ID
													JOIN CTE_PLAN_STATUS CS ON 1=1
													JOIN CTE_QTR_DATE CQ ON 1=1
													JOIN PR_PLAN P 
														ON PP.PLAN_ID = P.PLAN_ID 
														AND P.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID 
														AND PPS.START_DATE BETWEEN CQ.V_QTR_START_DATE AND CQ.V_QTR_END_DATE  
														AND P.PLAN_TYPE = CS.V_PLAN_TYPE
									)
									,PROJECT_EXISTS AS (
													SELECT 1 
													FROM PR_PLAN_SCHEDULE_EPISODE PPS1 
													JOIN PR_PLAN_PROJECT PP1 
														ON PP1.PLAN_ID = PPS1.PLAN_ID 
														AND PPS1.PLAN_VERSION_ID = 0 
														AND PP1.PROJECT_ID = PPS1.PROJECT_ID
													JOIN CTE_QTR_DATE CQ1 ON 1=1
													WHERE DATE(PPS1.START_DATE) BETWEEN CQ1.V_QTR_START_DATE AND CQ1.V_QTR_END_DATE
									)
									,CTE_PLAN_DATA AS(
													SELECT PP.PROJ_PRIORITY,PP.TARGET_REACH_PCT TARGET_REACH_PCT1,PP.TARGET_GRP TARGET_GRP1, PP.STATUS_CD,PP.PROJ_REACH_PERCENT,
													PP.EPISODE_PRIORITY ,PP.NO_OF_EPISODE ,PP.PROJ_GRP, PP.STATUS_CD AS PROJECT_STATUS_CD, RPS.NAME as STATUS_NAME,
													PP.DISPLAY_SEQ, PP.PROJECT_ID, PP.GUIDE_REACH_PCT, PP.GUIDE_GRP,PP.GUIDE_SPOTS, PP.CAMPAIGN_GOAL_ID,
													IFNULL(PP.IS_DIRTY_PROJECT,'N') IS_DIRTY_PROJECT, 'N' as PAST_QTR_PROJECT_FLAG, PP.USER_COMMENT,PP.CLUSTER_ID, 
													RC.CLUSTER_NAME, PP.SEGMENT, PP.SEGMENT_TYPE, PP.SEGMENT_AIRBYTE, PP.FREQUENCY, PP.ON_MAP_DEMO, PP.ON_MAP_START_DATE, PP.ON_MAP_END_DATE,
													PP.PLAN_ID,PP.PHASE_TYPE,PP.ON_MAP_PREMIER_DATE, PP.ON_MAP_START_DATE_TS, PP.ON_MAP_END_DATE_TS
													FROM PR_PLAN_PROJECT PP
													JOIN CTE_PLAN_STATUS CS ON 1=1
													JOIN CTE_VERSION_ID CV ON 1=1
													LEFT JOIN REF_PLAN_STATUS RPS ON CASE WHEN PP.OPTIMIZE_YN='Y' AND CS.V_PLAN_STATUS_ID=2 THEN 2 ELSE PP.STATUS_CD END=RPS.PLAN_STATUS_ID
													LEFT JOIN REF_CLUSTER RC on PP.CLUSTER_ID=RC.CLUSTER_ID
													WHERE PP.PLAN_ID= :IN_PLAN_ID AND PP.PLAN_VERSION_ID= CV.V_PLAN_VERSION_ID
													
											UNION
											
													SELECT PP.PROJ_PRIORITY,PP.TARGET_REACH_PCT TARGET_REACH_PCT1,PP.TARGET_GRP TARGET_GRP1, PP.STATUS_CD,PP.PROJ_REACH_PERCENT,
														PP.EPISODE_PRIORITY ,PP.NO_OF_EPISODE ,PP.PROJ_GRP, PP.STATUS_CD AS PROJECT_STATUS_CD, RPS.NAME as STATUS_NAME,
														PP.DISPLAY_SEQ, PP.PROJECT_ID, PP.GUIDE_REACH_PCT, PP.GUIDE_GRP, 
														PP.GUIDE_SPOTS, PP.CAMPAIGN_GOAL_ID, 
														IFNULL(PP.IS_DIRTY_PROJECT,'N') IS_DIRTY_PROJECT , 'Y' as PAST_QTR_PROJECT_FLAG , PP.USER_COMMENT, PP.CLUSTER_ID, 
														RC.CLUSTER_NAME, PP.SEGMENT, PP.SEGMENT_TYPE, PP.SEGMENT_AIRBYTE, PP.FREQUENCY, PP.ON_MAP_DEMO, PP.ON_MAP_START_DATE, PP.ON_MAP_END_DATE,
														PP.PLAN_ID,PP.PHASE_TYPE,PP.ON_MAP_PREMIER_DATE, PP.ON_MAP_START_DATE_TS, PP.ON_MAP_END_DATE_TS
													FROM PR_PLAN_PROJECT PP
													JOIN CTE_PLAN_STATUS CS ON 1=1
													JOIN CTE_QTR_DATE CQ ON 1=1
													JOIN MAX_PLAN_VERSION M ON M.PLAN_ID=PP.PLAN_ID AND M.PLAN_VERSION_ID=PP.PLAN_VERSION_ID
													JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.PLAN_TYPE=CS.V_PLAN_TYPE and P.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID 
													and P.PLAN_ID<>:IN_PLAN_ID
													AND PP.CAMPAIGN_GOAL_ID IN (SELECT CAMPAIGN_GOAL_ID FROM CTE_CAMPAIGN_ID) 
													JOIN PR_PLAN_SCHEDULE PPS on PP.PLAN_ID=PPS.PLAN_ID and PPS.PLAN_VERSION_ID=0 AND PP.PROJECT_ID=PPS.PROJECT_ID
													AND date(PPS.START_DATE)between CQ.V_QTR_START_DATE and CQ.V_QTR_END_DATE 
													LEFT JOIN REF_PLAN_STATUS RPS ON PP.STATUS_CD=RPS.PLAN_STATUS_ID
													LEFT JOIN REF_CLUSTER RC on PP.CLUSTER_ID=RC.CLUSTER_ID
												
													
											UNION
											
													SELECT  
													PP.PROJ_PRIORITY,
													PP.TARGET_REACH_PCT AS TARGET_REACH_PCT1,
													PP.TARGET_GRP AS TARGET_GRP1,
													PP.STATUS_CD,
													PP.PROJ_REACH_PERCENT,
													PP.EPISODE_PRIORITY,
													PP.NO_OF_EPISODE,
													PP.PROJ_GRP,
													PP.STATUS_CD AS PROJECT_STATUS_CD,
													RPS.NAME AS STATUS_NAME,
													PP.DISPLAY_SEQ,
													PP.PROJECT_ID,
													PP.GUIDE_REACH_PCT,
													PP.GUIDE_GRP,
													PP.GUIDE_SPOTS,
													PP.CAMPAIGN_GOAL_ID,
													IFNULL(PP.IS_DIRTY_PROJECT, 'N') AS IS_DIRTY_PROJECT,
													'Y' AS PAST_QTR_PROJECT_FLAG,
													PP.USER_COMMENT,
													PP.CLUSTER_ID,
													RC.CLUSTER_NAME,
													PP.SEGMENT,
													PP.SEGMENT_TYPE,
													PP.SEGMENT_AIRBYTE,
													PP.FREQUENCY,
													PP.ON_MAP_DEMO,
													PP.ON_MAP_START_DATE,
													PP.ON_MAP_END_DATE,
													PP.PLAN_ID,
													PP.PHASE_TYPE,
													PP.ON_MAP_PREMIER_DATE,
													PP.ON_MAP_START_DATE_TS,
													PP.ON_MAP_END_DATE_TS                
													FROM PR_PLAN_PROJECT PP
													JOIN CTE_PLAN_STATUS CS ON 1=1
													JOIN CTE_QTR_DATE CQ ON 1=1
													JOIN PR_PLAN P 
													ON PP.PLAN_ID = P.PLAN_ID 
													AND P.PLAN_TYPE = CS.V_PLAN_TYPE 
													AND P.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID 
													AND P.PLAN_ID <> :IN_PLAN_ID
													JOIN MAX_PLAN_VERSION M
													ON PP.PLAN_VERSION_ID = M.PLAN_VERSION_ID
													AND M.PLAN_ID = PP.PLAN_ID
													AND PP.PROJECT_ID NOT in ( SELECT PROJECT_ID FROM EXCLUDED_PROJECTS)
													INNER JOIN PR_PLAN_PROJECT_EPISODE PPE ON PP.PROJECT_ID = PPE.PROJECT_ID AND PP.PLAN_ID = PPE.PLAN_ID
													AND PP.PLAN_VERSION_ID = PPE.PLAN_VERSION_ID AND PP.PROJECT_ID = PPE.PROJECT_ID
													AND PPE.CAMPAIGN_GOAL_ID IN (SELECT CAMPAIGN_GOAL_ID FROM CAMPAIGN_GOALS)
													AND EXISTS (
													SELECT 1 
													FROM PROJECT_EXISTS
													)
													LEFT JOIN REF_PLAN_STATUS RPS 
													ON PP.STATUS_CD = RPS.PLAN_STATUS_ID
													LEFT JOIN REF_CLUSTER RC 
													ON PP.CLUSTER_ID = RC.CLUSTER_ID
													GROUP BY ALL
													ORDER BY PAST_QTR_PROJECT_FLAG, DISPLAY_SEQ

									)
									,CTE_PROJECT AS (
												SELECT DISTINCT PLAN_ID,PROJECT_ID FROM CTE_PLAN_DATA
									)
									,CTE_COLOUR_CHECK AS(
												SELECT CP.PROJECT_ID,
												CASE WHEN PPEH.EPISODE_END_DT < CURRENT_TIMESTAMP() THEN 'N' 
												ELSE CASE 
												WHEN COALESCE(PPEH.MAP_COLOUR_UPDATED_TS, '1990-01-01') > PPP.UPDATE_TS THEN 'Y' 
												ELSE 'N' END END AS FLAG
												FROM PR_PLAN_PROJECT PPP 
												JOIN CTE_PROJECT CP ON 1=1
												LEFT JOIN PR_PROJECT_EPISODE_HEADER PPEH ON PPP.PROJECT_ID = PPEH.PROJECT_ID 
												WHERE PPP.PROJECT_ID = CP.PROJECT_ID 
												AND PPP.PLAN_ID = CP.PLAN_ID
												AND PPP.PLAN_VERSION_ID = (
												SELECT MAX(PLAN_VERSION_ID) 
												FROM PR_PLAN_VERSION 
												WHERE PLAN_ID = PPP.PLAN_ID)
									)
							, CTE_PLAN_ENDDATE AS (
								SELECT CP.PLAN_ID, CP.PROJECT_ID,
									CONCAT('v', MAX(ME.PLAN_VERSION_ID) + 1, ' ', TO_CHAR(MAX(ME.EXEC_END_DT), 'MM/DD/YYYY HH12:MI AM')) AS LAST_OPT_VERSION_TS,
									1 AS PHASE 
								FROM PR_PLAN_PROJECT PPP 
								INNER JOIN MODEL_EXEC ME ON PPP.PLAN_ID = ME.PLAN_ID AND PPP.PLAN_VERSION_ID = ME.PLAN_VERSION_ID AND PPP.OPTIMIZE_YN = 'Y' AND ME.EXEC_STATUS_CD = 'C'
								JOIN CTE_PROJECT CP ON PPP.PLAN_ID = CP.PLAN_ID AND PPP.PROJECT_ID = CP.PROJECT_ID 
								GROUP BY CP.PLAN_ID, CP.PROJECT_ID
							)
							, CTE_EPISODE_ENDDATE AS (
								SELECT CP.PLAN_ID, CP.PROJECT_ID,
									CONCAT('v', MAX(ME.PLAN_VERSION_ID) + 1, ' ', TO_CHAR(MAX(ME.EXEC_END_DT), 'MM/DD/YYYY HH12:MI AM')) AS LAST_OPT_VERSION_TS,
									2 AS PHASE  
								FROM PR_PLAN_PROJECT_EPISODE PPP
								INNER JOIN MODEL_EXEC ME ON PPP.PLAN_ID = ME.PLAN_ID AND PPP.PLAN_VERSION_ID = ME.PLAN_VERSION_ID AND PPP.OPTIMIZE_YN = 'Y' AND ME.EXEC_STATUS_CD = 'C'
								JOIN CTE_PROJECT CP ON PPP.PLAN_ID = CP.PLAN_ID AND PPP.PROJECT_ID = CP.PROJECT_ID 
								GROUP BY CP.PLAN_ID, CP.PROJECT_ID
							)
							, FINAL_RESULT_VERSION AS (
								SELECT PLAN_ID, PROJECT_ID, LAST_OPT_VERSION_TS, PHASE,
									ROW_NUMBER() OVER (PARTITION BY PROJECT_ID ORDER BY PHASE DESC) AS RN
								FROM (
									SELECT * FROM CTE_EPISODE_ENDDATE
									UNION ALL
									SELECT * FROM CTE_PLAN_ENDDATE
								) t
							)
							, CTE_UPDATED_VERSION AS (

								SELECT PROJECT_ID, LAST_OPT_VERSION_TS V_GET_VERSION
								FROM FINAL_RESULT_VERSION
								WHERE RN = 1
							)
									,CTE_FINAL AS(
												SELECT CD.*, V_GET_VERSION,CCC.FLAG FROM CTE_PLAN_DATA CD 
												LEFT JOIN CTE_UPDATED_VERSION CV ON CD.PROJECT_ID =CV.PROJECT_ID
												LEFT JOIN CTE_COLOUR_CHECK CCC ON CCC.PROJECT_ID=CD.PROJECT_ID
									)
									,CTE_VERSION_PLAN AS (
												SELECT ME.PLAN_ID, ME.PLAN_VERSION_ID, MAX(EXEC_END_DT) AS EXEC_END_DT FROM MODEL_EXEC ME 
												JOIN CTE_VERSION_ID MV ON 1=1
												WHERE ME.PLAN_ID=:IN_PLAN_ID AND ME.PLAN_VERSION_ID=MV.V_PLAN_VERSION_ID
												GROUP BY ME.PLAN_ID,ME.PLAN_VERSION_ID
									)
									,CTE_PLAN_DATA1 AS (
														SELECT DISTINCT PP.DISPLAY_SEQ, PP.PROJECT_ID,  PL.PLAN_ID,PP1.NAME AS PROJECT_NAME, (PP.PHASE_TYPE) AS "phTypeID",
															(RPPT.DESCRIPTION) AS "ph_description", PP1.IS_EPISODIC, PP1.MEDIA_OUTLET_ID,
															RMO.SHORT_NAME AS NETWORK_NAME, PP.PROJECT_STATUS_CD, PP.STATUS_NAME AS PROJECT_STATUS,
															(PP.PROJ_REACH_PERCENT) AS PROJ_REACH_PERCENT, (PROJ_GRP) AS PROJ_GRP, 
															PP1.START_DATE AS PROJECT_START_DATE,
															PP1.END_DATE AS PROJECT_END_DATE,(PP.ON_MAP_START_DATE) AS START_DATE,
															(PP.ON_MAP_END_DATE) AS END_DATE,(PP.ON_MAP_START_DATE_TS) AS ON_MAP_START_DATE_TS,
															(PP.ON_MAP_END_DATE_TS) AS ON_MAP_END_DATE_TS,
															PP1.TARGET_FREQUENCY AS PROJECT_FREQ, RS1.SEGMENT_NAME AS PROJECT_SEGMENT,
															RS1.SEGMENT_ID AS PROJECT_SEGMENT_ID, RD1.NAME AS PROJECT_DEMO,
															RD1.DEMO_ID AS PROJECT_DEMO_ID, PP1.PREMIERE_DATE,
															CEIL(CASE WHEN DATEDIFF(DAY,(PP.ON_MAP_START_DATE),(PP.ON_MAP_END_DATE)) = 0 THEN 1 
																		ELSE DATEDIFF(DAY,(PP.ON_MAP_START_DATE),(PP.ON_MAP_END_DATE)) END / 7) AS NO_OF_WEEKS,
															CEIL(CASE WHEN DATEDIFF(DAY,PP1.START_DATE,PP1.END_DATE) = 0 THEN 1 
																		ELSE DATEDIFF(DAY,PP1.START_DATE,PP1.END_DATE) END / 7) AS UPDATED_NO_OF_WKS,
															PP1.CAMPAIGN_TYPE_ID, RCT.NAME AS CAMPAIGN_TYPE, PP.ON_MAP_DEMO AS DEMO_ID,
															RD.NAME AS DEMO, PP.SEGMENT AS SEGMENT_ID,
															(SELECT LISTAGG(COMPONENT_SEGMENT_ID, ', ') FROM REF_SEGMENT_COMPONENT WHERE SEGMENT_ID = PCG.SEGMENT) AS SEGMENT_SELECTED,
															(PP.SEGMENT_TYPE) AS SEGMENT_TYPE, (PP.SEGMENT_AIRBYTE) AS SEGMENT_AIRBYTE, RS.SEGMENT_NAME AS SEGMENT_NAME,
															PL.NAME AS PLAN_NAME, PL_MSG.NAME AS MSG_PLAN_NAME, PL.PLAN_STATUS_ID,
															RPS.NAME AS PLAN_STATUS, PL.COMMENTS AS STATUS_COMMENT, 
															PP.FREQUENCY AS TARGET_FREQUENCY, PP.TARGET_REACH_PCT1 AS TARGET_REACH,
															PP.TARGET_GRP1 AS TARGET_GRP, (PP.EPISODE_PRIORITY) AS EPISODIC_PRIORITY,
															(PP.NO_OF_EPISODE) AS NO_OF_EPISODE,
																CASE WHEN PP.PAST_QTR_PROJECT_FLAG='Y' THEN 'N' ELSE IFNULL(PP.FLAG,'N') END AS COLOUR_CHECK_FLAG,
															PPEH.MAP_COLOUR_UPDATED_TS, PP.PROJ_PRIORITY AS PRIORITY,
															PP1.SCATTER_IMPS, PP1.SUBEVENT_ID, RES.SUBEVENT_NAME,
															(PP.GUIDE_REACH_PCT) AS GUIDE_REACH_PCT, (PP.GUIDE_GRP) AS GUIDE_GRP, (PP.GUIDE_SPOTS) AS GUIDE_SPOTS,
															IFNULL(ME.EXEC_END_DT, PL.UPDATE_DATE) AS EXEC_END_DT,
															PP.CAMPAIGN_GOAL_ID, PP.IS_DIRTY_PROJECT AS IS_DIRTY_PROJECT,
															PP.PAST_QTR_PROJECT_FLAG AS PAST_PROJECT, PP1.USER_COMMENT,
															PP.V_GET_VERSION AS LAST_OPT_VERSION_TS,
															PP.ON_MAP_DEMO AS NETWORK_TARGET_DEMO_ID, 
															RD.NAME AS NETWORK_TARGET_DEMO_NAME,
															CASE WHEN PP1.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID THEN 1 ELSE 99 END AS NETWORK_DISPLAY_SEQ,
															PP.CLUSTER_ID, PP.CLUSTER_NAME, (PP.PROJ_REACH_PERCENT) AS PROJ_PLANNED_REACH, 
															(PP.PROJ_GRP) AS PROJ_PLANNED_GRP, (PP.ON_MAP_PREMIER_DATE) AS ON_MAP_PREMIER_DATE
																	FROM CTE_FINAL PP 
																	JOIN CTE_DEMO CD ON 1=1  
																	JOIN CTE_PLAN_STATUS CPS ON 1=1
																LEFT JOIN PR_PROJECT PP1 ON PP.PROJECT_ID=PP1.PROJECT_ID
																LEFT JOIN REF_PROJECT_PLAN_TYPE RPPT ON PP.PHASE_TYPE = RPPT.TYPE_ID
																LEFT JOIN PR_PROJECT_EPISODE_HEADER PPEH ON PP.PROJECT_ID = PPEH.PROJECT_ID
																LEFT JOIN PR_CAMPAIGN_GOAL PCG ON PP.CAMPAIGN_GOAL_ID = PCG.CAMPAIGN_GOAL_ID
																LEFT JOIN REF_DEMO RD ON RD.DEMO_ID = PP.ON_MAP_DEMO
																LEFT JOIN REF_DEMO RD1 ON RD1.DEMO_ID = PP1.TARGET_DEMO_ID
																LEFT JOIN REF_SEGMENT RS ON RS.SEGMENT_ID = PP.SEGMENT
																LEFT JOIN REF_SEGMENT RS1 ON RS1.SEGMENT_ID = PP1.TARGET_SEGMENT
																LEFT JOIN REF_2E_EVENT_SUBTYPE_PROJECT RES ON PP1.SUBEVENT_ID=RES.SUBEVENT_ID
																LEFT JOIN REF_MEDIA_OUTLET RMO ON PP1.MEDIA_OUTLET_ID=RMO.MEDIA_OUTLET_ID
																LEFT JOIN PR_PLAN PL ON PL.PLAN_ID=:IN_PLAN_ID
																LEFT JOIN PR_PLAN PL_MSG ON PL_MSG.PLAN_ID=PP.PLAN_ID
																LEFT JOIN REF_PLAN_STATUS RPS ON PL.PLAN_STATUS_ID=RPS.PLAN_STATUS_ID
																LEFT JOIN REF_CAMPAIGN_TYPE RCT ON RCT.CAMPAIGN_TYPE_ID=PP1.CAMPAIGN_TYPE_ID
																LEFT JOIN CTE_VERSION_PLAN ME ON ME.PLAN_ID=PL.PLAN_ID AND ME.PLAN_VERSION_ID=(SELECT V_PLAN_VERSION_ID FROM CTE_VERSION_ID)
																WHERE CPS.V_PLAN_STATUS_ID=3

															UNION
															
														SELECT DISTINCT PP.DISPLAY_SEQ, PP.PROJECT_ID, PL.PLAN_ID,PP1.NAME AS PROJECT_NAME, (PP.PHASE_TYPE) AS "phTypeID",
															(RPPT.DESCRIPTION) AS "ph_description",PP1.IS_EPISODIC, PP1.MEDIA_OUTLET_ID,
															RMO.SHORT_NAME AS NETWORK_NAME, PP.PROJECT_STATUS_CD, PP.STATUS_NAME AS PROJECT_STATUS,
															(PP.PROJ_REACH_PERCENT) AS PROJ_REACH_PERCENT, (PROJ_GRP) AS PROJ_GRP, 
															PP1.START_DATE AS PROJECT_START_DATE,
															PP1.END_DATE AS PROJECT_END_DATE,(PP.ON_MAP_START_DATE) AS START_DATE,
															(PP.ON_MAP_END_DATE) AS END_DATE,(PP.ON_MAP_START_DATE_TS) AS ON_MAP_START_DATE_TS,
															(PP.ON_MAP_END_DATE_TS) AS ON_MAP_END_DATE_TS,
															PP1.TARGET_FREQUENCY AS PROJECT_FREQ, RS1.SEGMENT_NAME AS PROJECT_SEGMENT,
															RS1.SEGMENT_ID AS PROJECT_SEGMENT_ID, RD1.NAME AS PROJECT_DEMO,
															RD1.DEMO_ID AS PROJECT_DEMO_ID, PP1.PREMIERE_DATE,
															CEIL(CASE WHEN DATEDIFF(DAY,(PP.ON_MAP_START_DATE),(PP.ON_MAP_END_DATE)) = 0 THEN 1 
																		ELSE DATEDIFF(DAY,(PP.ON_MAP_START_DATE),(PP.ON_MAP_END_DATE)) END / 7) AS NO_OF_WEEKS,
															CEIL(CASE WHEN DATEDIFF(DAY,PP1.START_DATE,PP1.END_DATE) = 0 THEN 1 
																		ELSE DATEDIFF(DAY,PP1.START_DATE,PP1.END_DATE) END / 7) AS UPDATED_NO_OF_WKS,
															PP1.CAMPAIGN_TYPE_ID, RCT.NAME AS CAMPAIGN_TYPE, PP.ON_MAP_DEMO AS DEMO_ID,
															RD.NAME AS DEMO, PP.SEGMENT AS SEGMENT_ID,
															(SELECT LISTAGG(COMPONENT_SEGMENT_ID, ', ') FROM REF_SEGMENT_COMPONENT WHERE SEGMENT_ID = PP.SEGMENT) AS SEGMENT_SELECTED,
															(PP.SEGMENT_TYPE) AS SEGMENT_TYPE, (PP.SEGMENT_AIRBYTE) AS SEGMENT_AIRBYTE, RS.SEGMENT_NAME AS SEGMENT_NAME,
															PL.NAME AS PLAN_NAME, PL_MSG.NAME AS MSG_PLAN_NAME, PL.PLAN_STATUS_ID,
															RPS.NAME AS PLAN_STATUS, PL.COMMENTS AS STATUS_COMMENT, 
															PP.FREQUENCY AS TARGET_FREQUENCY, PP.TARGET_REACH_PCT1 AS TARGET_REACH,
															PP.TARGET_GRP1 AS TARGET_GRP, (PP.EPISODE_PRIORITY) AS EPISODIC_PRIORITY,
															(PP.NO_OF_EPISODE) AS NO_OF_EPISODE,
																CASE WHEN PP.PAST_QTR_PROJECT_FLAG='Y' THEN 'N' ELSE IFNULL(PP.FLAG,'N') END AS COLOUR_CHECK_FLAG,
															PPEH.MAP_COLOUR_UPDATED_TS, PP.PROJ_PRIORITY AS PRIORITY,
															PP1.SCATTER_IMPS, PP1.SUBEVENT_ID, RES.SUBEVENT_NAME,
															(PP.GUIDE_REACH_PCT) AS GUIDE_REACH_PCT, (PP.GUIDE_GRP) AS GUIDE_GRP, (PP.GUIDE_SPOTS) AS GUIDE_SPOTS,
															IFNULL(ME.EXEC_END_DT, PL.UPDATE_DATE) AS EXEC_END_DT,
															PP.CAMPAIGN_GOAL_ID, PP.IS_DIRTY_PROJECT AS IS_DIRTY_PROJECT,
															PP.PAST_QTR_PROJECT_FLAG AS PAST_PROJECT, PP1.USER_COMMENT,
															PP.V_GET_VERSION AS LAST_OPT_VERSION_TS,
															PP.ON_MAP_DEMO AS NETWORK_TARGET_DEMO_ID, 
															RD.NAME AS NETWORK_TARGET_DEMO_NAME,
															CASE WHEN PP1.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID THEN 1 ELSE 99 END AS NETWORK_DISPLAY_SEQ,
															PP.CLUSTER_ID, PP.CLUSTER_NAME, (PP.PROJ_REACH_PERCENT) AS PROJ_PLANNED_REACH, 
															(PP.PROJ_GRP) AS PROJ_PLANNED_GRP, (PP.ON_MAP_PREMIER_DATE) AS ON_MAP_PREMIER_DATE
																	FROM CTE_FINAL PP 
																	JOIN CTE_DEMO CD ON 1=1  
																	JOIN CTE_PLAN_STATUS CPS ON 1=1
																LEFT JOIN PR_PROJECT PP1 ON PP.PROJECT_ID=PP1.PROJECT_ID
																LEFT JOIN REF_PROJECT_PLAN_TYPE RPPT ON PP.PHASE_TYPE = RPPT.TYPE_ID
																LEFT JOIN PR_PROJECT_EPISODE_HEADER PPEH ON PP.PROJECT_ID = PPEH.PROJECT_ID
																-- LEFT JOIN PR_CAMPAIGN_GOAL PCG ON PP.CAMPAIGN_GOAL_ID = PCG.CAMPAIGN_GOAL_ID
																LEFT JOIN REF_DEMO RD ON RD.DEMO_ID = PP.ON_MAP_DEMO
																LEFT JOIN REF_DEMO RD1 ON RD1.DEMO_ID = PP1.TARGET_DEMO_ID
																LEFT JOIN REF_SEGMENT RS ON RS.SEGMENT_ID = PP.SEGMENT
																LEFT JOIN REF_SEGMENT RS1 ON RS1.SEGMENT_ID = PP1.TARGET_SEGMENT
																LEFT JOIN REF_2E_EVENT_SUBTYPE_PROJECT RES ON PP1.SUBEVENT_ID=RES.SUBEVENT_ID
																LEFT JOIN REF_MEDIA_OUTLET RMO ON PP1.MEDIA_OUTLET_ID=RMO.MEDIA_OUTLET_ID
																LEFT JOIN PR_PLAN PL ON PL.PLAN_ID=:IN_PLAN_ID
																LEFT JOIN PR_PLAN PL_MSG ON PL_MSG.PLAN_ID=PP.PLAN_ID
																LEFT JOIN REF_PLAN_STATUS RPS ON PL.PLAN_STATUS_ID=RPS.PLAN_STATUS_ID
																LEFT JOIN REF_CAMPAIGN_TYPE RCT ON RCT.CAMPAIGN_TYPE_ID=PP1.CAMPAIGN_TYPE_ID
																LEFT JOIN CTE_VERSION_PLAN ME ON ME.PLAN_ID=PL.PLAN_ID AND ME.PLAN_VERSION_ID=(SELECT V_PLAN_VERSION_ID FROM CTE_VERSION_ID)
																WHERE CPS.V_PLAN_STATUS_ID<>3
									) 
									,CTE_SPOT_BASED AS(
														SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE ,PPS.CAMPAIGN_GOAL_ID, PPS.PROJECT_ID, SUM(PPS.PLANNED_UNITS) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_SCHEDULE PPS 
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														JOIN CTE_VERSION_ID CV ON 1=1
														JOIN PR_PLAN_PROJECT PPP on  PPS.PLAN_ID=:IN_PLAN_ID AND PPS.PLAN_VERSION_ID=0 
														AND PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
														AND PPS.PLAN_ID=PPP.PLAN_ID AND PPP.PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID
														AND PPS.PROJECT_ID=PPP.PROJECT_ID 
														AND CASE WHEN CS.V_PERIOD_ID>316 THEN PPP.STATUS_CD in (9,10) ELSE 1=1 END	
														WHERE CS.V_PLAN_STATUS_ID=3
														group by V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID
																
													UNION	
													
													SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,CAMPAIGN_GOAL_ID,PPS.PROJECT_ID, SUM(PLANNED_UNITS) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_SCHEDULE PPS
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 and PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
														and PROJECT_TYPE=CS.V_PLAN_TYPE
														WHERE PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
														and PPS.PLAN_ID<>:IN_PLAN_ID AND CS.V_PLAN_STATUS_ID=3
														group by V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID
														
													UNION
													
														SELECT V_WEEK_START_DATE,NULL CAMPAIGN_GOAL_ID,PPPS.PROJECT_ID, UNIT_COUNT AS UNITS,CONCAT('WEEK',(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_PROJECT_SPOTS  PPPS
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_VERSION_ID CV ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														JOIN PR_PLAN_PROJECT PPP on PPP.PLAN_ID=PPPS.PLAN_ID and PPP.PLAN_VERSION_ID=PPPS.PLAN_VERSION_ID  
														AND PPP.PROJECT_ID=PPPS.PROJECT_ID 
														WHERE PPPS.PLAN_ID=:IN_PLAN_ID AND PPPS.PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID 
														AND PPP.STATUS_CD not in (9,10) AND CS.V_PLAN_STATUS_ID=3
														and WEEK_DATE=CW.V_WEEK_START_DATE
														
													UNION
														
														SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,NULL AS CAMPAIGN_GOAL_ID, PROJECT_ID, UNIT_COUNT AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_PROJECT_SPOTS PPS
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_VERSION_ID CV ON 1=1
														JOIN CTE_PLAN_STATUS CPS ON 1=1
														WHERE PPS.PLAN_ID=:IN_PLAN_ID 
														AND PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID AND WEEK_DATE=CW.V_WEEK_START_DATE
														AND CPS.V_PLAN_STATUS_ID<>3
														group by V_WEEK_START_DATE,PPS.PROJECT_ID,UNIT_COUNT,CAMPAIGN_GOAL_ID
														
														
													UNION
													
														SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,NULL AS CAMPAIGN_GOAL_ID,PPS.PROJECT_ID, SUM(PPS.PLANNED_UNITS) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_SCHEDULE PPS
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														JOIN CTE_QTR_DATE CV ON 1=1
														JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 
														AND PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
														and date(PP.START_DATE)<=date(CV.V_QTR_END_DATE)   
														and PROJECT_TYPE=CS.V_PLAN_TYPE
														WHERE PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
														and PPS.PLAN_ID<>:IN_PLAN_ID  AND CS.V_PLAN_STATUS_ID<>3
														group by V_WEEK_START_DATE,PPS.PROJECT_ID,CAMPAIGN_GOAL_ID
									)
									,CTE_GRP_BASED AS(
													SELECT (V_WEEK_START_DATE) V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID, PPS.PROJECT_ID, 
														SUM(PPS.PLANNED_GRP) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK  
														FROM PR_PLAN_SCHEDULE PPS 
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_VERSION_ID CV ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														JOIN PR_PLAN_PROJECT PPP on  PPS.PLAN_ID=:IN_PLAN_ID AND PPS.PLAN_VERSION_ID=0 
														AND PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
														AND PPS.PLAN_ID=PPP.PLAN_ID AND PPP.PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID
														AND PPS.PROJECT_ID=PPP.PROJECT_ID AND PPP.STATUS_CD in (9,10)
														WHERE CS.V_PLAN_STATUS_ID=3
														group by V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID
														
													UNION
													SELECT (V_WEEK_START_DATE) V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID, 
													SUM(PLANNED_GRP) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_SCHEDULE PPS
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 and PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
														and PROJECT_TYPE=CS.V_PLAN_TYPE
														WHERE PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
														and PPS.PLAN_ID<>:IN_PLAN_ID AND CS.V_PLAN_STATUS_ID=3
														group by V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID 
														
													UNION
													SELECT V_WEEK_START_DATE,NULL CAMPAIGN_GOAL_ID,PPPS.PROJECT_ID, UNIT_COUNT AS UNITS,CONCAT('WEEK',(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_PROJECT_SPOTS PPPS
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_VERSION_ID CV ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														JOIN PR_PLAN_PROJECT PPP on PPP.PLAN_ID=PPPS.PLAN_ID and PPP.PLAN_VERSION_ID=PPPS.PLAN_VERSION_ID  
														AND PPP.PROJECT_ID=PPPS.PROJECT_ID 
														WHERE PPPS.PLAN_ID=:IN_PLAN_ID AND PPPS.PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID 
														AND  PPP.STATUS_CD not in (9,10) and WEEK_DATE=CW.V_WEEK_START_DATE
														AND CS.V_PLAN_STATUS_ID=3
													UNION
														SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,NULL AS CAMPAIGN_GOAL_ID, PROJECT_ID, UNIT_COUNT AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_PROJECT_SPOTS PPS
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_VERSION_ID CV ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														WHERE PPS.PLAN_ID=:IN_PLAN_ID AND CS.V_PLAN_STATUS_ID<>3
														AND PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID AND WEEK_DATE=CW.V_WEEK_START_DATE
														group by V_WEEK_START_DATE,PPS.PROJECT_ID,UNIT_COUNT,CAMPAIGN_GOAL_ID
														
													UNION 
														SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,NULL AS CAMPAIGN_GOAL_ID,PPS.PROJECT_ID, SUM(PLANNED_GRP) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
														FROM PR_PLAN_SCHEDULE PPS
														JOIN CTE_WEEK_DATE CW ON 1=1
														JOIN CTE_PLAN_STATUS CS ON 1=1
														JOIN CTE_QTR_DATE CV ON 1=1
														JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 
														AND PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
														and date(PP.START_DATE)<=date(CV.V_QTR_END_DATE)   
														and PROJECT_TYPE=CS.V_PLAN_TYPE
														WHERE PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
														and PPS.PLAN_ID<>:IN_PLAN_ID AND CS.V_PLAN_STATUS_ID<>3
														group by V_WEEK_START_DATE,PPS.PROJECT_ID,CAMPAIGN_GOAL_ID 
									)
									,CTE_SPOT_BASED_DATA AS(
													SELECT PP.*,WD.V_WEEK_START_DATE,WEEK,UNITS
													FROM CTE_PLAN_DATA1 PP
													JOIN CTE_PLAN_STATUS CS ON 1=1
													LEFT JOIN CTE_SPOT_BASED WD ON
													PP.PROJECT_ID = WD.PROJECT_ID 
													WHERE :IN_OUTPUT_TYPE=1 AND CS.V_PLAN_STATUS_ID<>3--AND V_WEEK_START_DATE IS NOT NULL

													UNION

													SELECT PP.*,WD.V_WEEK_START_DATE,WEEK,UNITS
													FROM CTE_PLAN_DATA1 PP
													JOIN CTE_PLAN_STATUS CS ON 1=1
													LEFT JOIN CTE_SPOT_BASED WD ON
													CASE WHEN WD.CAMPAIGN_GOAL_ID IS NULL THEN
													PP.PROJECT_ID = WD.PROJECT_ID ELSE 
													PP.CAMPAIGN_GOAL_ID=WD.CAMPAIGN_GOAL_ID END
													WHERE :IN_OUTPUT_TYPE=1 AND CS.V_PLAN_STATUS_ID=3--AND V_WEEK_START_DATE IS NOT NULL
									)
									,CTE_GRP_BASED_DATA AS(
													SELECT PP.*,WD.V_WEEK_START_DATE,WEEK,UNITS
													FROM CTE_PLAN_DATA1 PP
													JOIN CTE_PLAN_STATUS CS ON 1=1
													LEFT JOIN CTE_GRP_BASED WD 
													ON PP.PROJECT_ID = WD.PROJECT_ID
													WHERE :IN_OUTPUT_TYPE<>1 AND CS.V_PLAN_STATUS_ID<>3 --AND WD.V_WEEK_START_DATE IS NOT NULL

													UNION

													SELECT PP.*,WD.V_WEEK_START_DATE,WEEK,UNITS
													FROM CTE_PLAN_DATA1 PP
													JOIN CTE_PLAN_STATUS CS ON 1=1
													LEFT JOIN CTE_GRP_BASED WD 
													ON CASE WHEN WD.CAMPAIGN_GOAL_ID IS NULL THEN
													PP.PROJECT_ID = WD.PROJECT_ID ELSE 
													PP.CAMPAIGN_GOAL_ID=WD.CAMPAIGN_GOAL_ID END
													WHERE :IN_OUTPUT_TYPE<>1 AND CS.V_PLAN_STATUS_ID=3 --AND WD.V_WEEK_START_DATE IS NOT NULL
									)

									SELECT * FROM CTE_SPOT_BASED_DATA
									UNION
									SELECT * FROM CTE_GRP_BASED_DATA;`,

			},
			VMN: {
				getPlanDataForOptimization: `
											WITH CTE_PLAN_STATUS AS(
											SELECT PP.PERIOD_ID AS V_PERIOD_ID, IFNULL(PP.PLAN_STATUS_ID,0) AS V_PLAN_STATUS_ID,PP.PLAN_TYPE AS  V_PLAN_TYPE 
											FROM PR_PLAN PP 
											WHERE PP.PLAN_ID=:IN_PLAN_ID AND PP.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID LIMIT 1
							)
							,CTE_PLAN_TYPE AS(
											select case when CP.V_PLAN_TYPE=1 then 1 when CP.V_PLAN_TYPE = 2 then 3 end AS V_MODEL_TYPE FROM CTE_PLAN_STATUS CP
							)
							,CTE_DEMO AS(
											SELECT ROD.DEMO_ID AS V_NETWORK_TARGET_DEMO_ID,RD.NAME AS V_NETWORK_TARGET_DEMO_NAME 
											FROM REF_MEDIA_OUTLET_DEMO ROD JOIN REF_DEMO RD on ROD.DEMO_ID=RD.DEMO_ID
											where ROD.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID and ACTIVE_YN='Y' and DEFAULT_YN='Y'
							)  
							,CTE_VERSION_ID AS(
											SELECT MAX(PLAN_VERSION_ID) AS V_PLAN_VERSION_ID 
											FROM PR_PLAN_VERSION PR
											WHERE PR.PLAN_ID=:IN_PLAN_ID
							)
							,CTE_PAST_PLANID AS(
											SELECT PP.PLAN_ID AS V_PAST_PLAN_ID FROM PR_PLAN PP
											JOIN CTE_PLAN_STATUS CS ON 1=1 
											WHERE PERIOD_ID=(
											SELECT PP.PERIOD_ID-1 FROM PR_PLAN PP
											JOIN CTE_PLAN_STATUS CS ON 1=1
											WHERE PP.PLAN_ID=:IN_PLAN_ID AND PP.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID AND PP.PLAN_TYPE=CS.V_PLAN_TYPE LIMIT 1) 
											AND PP.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID AND ACTIVE_YN='Y' AND PP.PLAN_TYPE=CS.V_PLAN_TYPE
							)
							,CTE_PAST_VERSIONID AS(
											SELECT IFNULL(MAX(PLAN_VERSION_ID),0) AS V_PAST_PLAN_VERSION_ID FROM MODEL_EXEC ME
											JOIN CTE_PAST_PLANID CP ON 1=1
											WHERE ME.PLAN_ID=CP.V_PAST_PLAN_ID AND EXEC_STATUS_CD='C'
							)
							,CTE_QTR_DATE AS(
											SELECT START_DATE AS V_QTR_START_DATE, END_DATE AS V_QTR_END_DATE 
											FROM REF_CAL_PERIOD RC
											WHERE RC.NAME =:IN_QTR AND PERIOD_TYPE_CD='Q'
							)
							,CTE_WEEK_DATE AS(
											SELECT START_DATE AS V_WEEK_START_DATE, END_DATE AS V_WEEK_END_DATE,ROW_NUMBER() OVER (ORDER BY END_DATE) AS WEEK_COUNT
											FROM REF_CAL_PERIOD WHERE FISCAL_QTR IN (
											SELECT FISCAL_QTR FROM REF_CAL_PERIOD RF JOIN CTE_PLAN_STATUS CS ON 1=1
											WHERE PERIOD_ID IN (CS.V_PERIOD_ID, CS.V_PERIOD_ID+1)) AND PERIOD_TYPE_CD='W' ORDER BY END_DATE ASC LIMIT 26
							)
							,MAX_PLAN_VERSION AS(
											select M.PLAN_ID, MAX(PLAN_VERSION_ID) PLAN_VERSION_ID from MODEL_EXEC M 
											JOIN CTE_PLAN_TYPE CT ON 1=1
											where M.MODEL_TYPE_ID=CT.V_MODEL_TYPE
											and M.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID and M.EXEC_STATUS_CD='C'
											group by M.PLAN_ID
							)
							,CTE_CAMPAIGN_ID AS(
											SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
											FROM PR_PLAN_SCHEDULE PPS 
											JOIN CTE_PLAN_STATUS CS ON 1=1
											JOIN CTE_QTR_DATE CQ ON 1=1
											INNER JOIN PR_PLAN_PROJECT PP ON PPS.CAMPAIGN_GOAL_ID=PP.CAMPAIGN_GOAL_ID
											JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID 
											AND PPS.START_DATE BETWEEN  CQ.V_QTR_START_DATE  AND  CQ.V_QTR_END_DATE  
											AND P.PLAN_TYPE=CS.V_PLAN_TYPE
							)
							,CTE_EPISODE_CAMPAIGN AS(
											SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
											FROM PR_PLAN_SCHEDULE_EPISODE PPS 
											JOIN CTE_PLAN_STATUS CS ON 1=1
											JOIN CTE_QTR_DATE CQ ON 1=1
											INNER JOIN PR_PLAN_PROJECT PP ON PPS.CAMPAIGN_GOAL_ID=PP.CAMPAIGN_GOAL_ID
											JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID 
											AND PPS.START_DATE BETWEEN  CQ.V_QTR_START_DATE  AND  CQ.V_QTR_END_DATE  
											AND P.PLAN_TYPE=CS.V_PLAN_TYPE
							)
							,EXCLUDED_PROJECTS AS (
											SELECT DISTINCT PROJECT_ID from PR_PLAN_SCHEDULE PPS 
											JOIN CTE_QTR_DATE CQ ON 1=1
											JOIN CTE_PLAN_STATUS CS ON 1=1
											JOIN PR_PLAN P on PPS.PLAN_ID=P.PLAN_ID 
											AND P.PLAN_TYPE=CS.V_PLAN_TYPE and PPS.MEDIA_OUTLET_ID=P.MEDIA_OUTLET_ID
											where P.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID AND START_DATE BETWEEN CQ.V_QTR_START_DATE AND CQ.V_QTR_END_DATE
							)
							,CAMPAIGN_GOALS AS (
											SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
											FROM PR_PLAN_SCHEDULE_EPISODE PPS
											INNER JOIN PR_PLAN_PROJECT_EPISODE PP 
												ON PPS.CAMPAIGN_GOAL_ID = PP.CAMPAIGN_GOAL_ID
											JOIN CTE_PLAN_STATUS CS ON 1=1
											JOIN CTE_QTR_DATE CQ ON 1=1
											JOIN PR_PLAN P 
												ON PP.PLAN_ID = P.PLAN_ID 
												AND P.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID 
												AND PPS.START_DATE BETWEEN CQ.V_QTR_START_DATE AND CQ.V_QTR_END_DATE  
												AND P.PLAN_TYPE = CS.V_PLAN_TYPE
							)
							,PROJECT_EXISTS AS (
											SELECT 1 
											FROM PR_PLAN_SCHEDULE_EPISODE PPS1 
											JOIN PR_PLAN_PROJECT PP1 
												ON PP1.PLAN_ID = PPS1.PLAN_ID 
												AND PPS1.PLAN_VERSION_ID = 0 
												AND PP1.PROJECT_ID = PPS1.PROJECT_ID
											JOIN CTE_QTR_DATE CQ1 ON 1=1
											WHERE DATE(PPS1.START_DATE) BETWEEN CQ1.V_QTR_START_DATE AND CQ1.V_QTR_END_DATE
							)
							,CTE_PLAN_DATA AS(
											SELECT PP.PROJ_PRIORITY,PP.TARGET_REACH_PCT TARGET_REACH_PCT1,PP.TARGET_GRP TARGET_GRP1, PP.STATUS_CD,PP.PROJ_REACH_PERCENT,
											PP.EPISODE_PRIORITY ,PP.NO_OF_EPISODE ,PP.PROJ_GRP, PP.STATUS_CD AS PROJECT_STATUS_CD, RPS.NAME as STATUS_NAME,
											PP.DISPLAY_SEQ, PP.PROJECT_ID, PP.GUIDE_REACH_PCT, PP.GUIDE_GRP,PP.GUIDE_SPOTS, PP.CAMPAIGN_GOAL_ID,
											IFNULL(PP.IS_DIRTY_PROJECT,'N') IS_DIRTY_PROJECT, 'N' as PAST_QTR_PROJECT_FLAG, PP.USER_COMMENT,PP.CLUSTER_ID, 
											RC.CLUSTER_NAME, PP.SEGMENT, PP.SEGMENT_TYPE, PP.SEGMENT_AIRBYTE, PP.FREQUENCY, PP.ON_MAP_DEMO, PP.ON_MAP_START_DATE, PP.ON_MAP_END_DATE,
											PP.PLAN_ID,PP.PHASE_TYPE,PP.ON_MAP_PREMIER_DATE, PP.ON_MAP_START_DATE_TS, PP.ON_MAP_END_DATE_TS
											FROM PR_PLAN_PROJECT PP
											JOIN CTE_PLAN_STATUS CS ON 1=1
											JOIN CTE_VERSION_ID CV ON 1=1
											LEFT JOIN REF_PLAN_STATUS RPS ON CASE WHEN PP.OPTIMIZE_YN='Y' AND CS.V_PLAN_STATUS_ID=2 THEN 2 ELSE PP.STATUS_CD END=RPS.PLAN_STATUS_ID
											LEFT JOIN REF_CLUSTER RC on PP.CLUSTER_ID=RC.CLUSTER_ID
											WHERE PP.PLAN_ID= :IN_PLAN_ID AND PP.PLAN_VERSION_ID= CV.V_PLAN_VERSION_ID
											
									UNION
									
											SELECT PP.PROJ_PRIORITY,PP.TARGET_REACH_PCT TARGET_REACH_PCT1,PP.TARGET_GRP TARGET_GRP1, PP.STATUS_CD,PP.PROJ_REACH_PERCENT,
												PP.EPISODE_PRIORITY ,PP.NO_OF_EPISODE ,PP.PROJ_GRP, PP.STATUS_CD AS PROJECT_STATUS_CD, RPS.NAME as STATUS_NAME,
												PP.DISPLAY_SEQ, PP.PROJECT_ID, PP.GUIDE_REACH_PCT, PP.GUIDE_GRP, 
												PP.GUIDE_SPOTS, PP.CAMPAIGN_GOAL_ID, 
												IFNULL(PP.IS_DIRTY_PROJECT,'N') IS_DIRTY_PROJECT , 'Y' as PAST_QTR_PROJECT_FLAG , PP.USER_COMMENT, PP.CLUSTER_ID, 
												RC.CLUSTER_NAME, PP.SEGMENT, PP.SEGMENT_TYPE, PP.SEGMENT_AIRBYTE, PP.FREQUENCY, PP.ON_MAP_DEMO, PP.ON_MAP_START_DATE, PP.ON_MAP_END_DATE,
												PP.PLAN_ID,PP.PHASE_TYPE,PP.ON_MAP_PREMIER_DATE, PP.ON_MAP_START_DATE_TS, PP.ON_MAP_END_DATE_TS
											FROM PR_PLAN_PROJECT PP
											JOIN CTE_PLAN_STATUS CS ON 1=1
											JOIN CTE_QTR_DATE CQ ON 1=1
											JOIN MAX_PLAN_VERSION M ON M.PLAN_ID=PP.PLAN_ID AND M.PLAN_VERSION_ID=PP.PLAN_VERSION_ID
											JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.PLAN_TYPE=CS.V_PLAN_TYPE and P.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID 
											and P.PLAN_ID<>:IN_PLAN_ID
											AND PP.CAMPAIGN_GOAL_ID IN (SELECT CAMPAIGN_GOAL_ID FROM CTE_CAMPAIGN_ID) 
											JOIN PR_PLAN_SCHEDULE PPS on PP.PLAN_ID=PPS.PLAN_ID and PPS.PLAN_VERSION_ID=0 AND PP.PROJECT_ID=PPS.PROJECT_ID
											AND date(PPS.START_DATE)between CQ.V_QTR_START_DATE and CQ.V_QTR_END_DATE 
											LEFT JOIN REF_PLAN_STATUS RPS ON PP.STATUS_CD=RPS.PLAN_STATUS_ID
											LEFT JOIN REF_CLUSTER RC on PP.CLUSTER_ID=RC.CLUSTER_ID
										
											
									UNION
									
											SELECT  
											PP.PROJ_PRIORITY,
											PP.TARGET_REACH_PCT AS TARGET_REACH_PCT1,
											PP.TARGET_GRP AS TARGET_GRP1,
											PP.STATUS_CD,
											PP.PROJ_REACH_PERCENT,
											PP.EPISODE_PRIORITY,
											PP.NO_OF_EPISODE,
											PP.PROJ_GRP,
											PP.STATUS_CD AS PROJECT_STATUS_CD,
											RPS.NAME AS STATUS_NAME,
											PP.DISPLAY_SEQ,
											PP.PROJECT_ID,
											PP.GUIDE_REACH_PCT,
											PP.GUIDE_GRP,
											PP.GUIDE_SPOTS,
											PP.CAMPAIGN_GOAL_ID,
											IFNULL(PP.IS_DIRTY_PROJECT, 'N') AS IS_DIRTY_PROJECT,
											'Y' AS PAST_QTR_PROJECT_FLAG,
											PP.USER_COMMENT,
											PP.CLUSTER_ID,
											RC.CLUSTER_NAME,
											PP.SEGMENT,
											PP.SEGMENT_TYPE,
											PP.SEGMENT_AIRBYTE,
											PP.FREQUENCY,
											PP.ON_MAP_DEMO,
											PP.ON_MAP_START_DATE,
											PP.ON_MAP_END_DATE,
											PP.PLAN_ID,
											PP.PHASE_TYPE,
											PP.ON_MAP_PREMIER_DATE,
											PP.ON_MAP_START_DATE_TS,
											PP.ON_MAP_END_DATE_TS                
											FROM PR_PLAN_PROJECT PP
											JOIN CTE_PLAN_STATUS CS ON 1=1
											JOIN CTE_QTR_DATE CQ ON 1=1
											JOIN PR_PLAN P 
											ON PP.PLAN_ID = P.PLAN_ID 
											AND P.PLAN_TYPE = CS.V_PLAN_TYPE 
											AND P.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID 
											AND P.PLAN_ID <> :IN_PLAN_ID
											JOIN MAX_PLAN_VERSION M
											ON PP.PLAN_VERSION_ID = M.PLAN_VERSION_ID
											AND M.PLAN_ID = PP.PLAN_ID
											AND PP.PROJECT_ID NOT in ( SELECT PROJECT_ID FROM EXCLUDED_PROJECTS)
											INNER JOIN PR_PLAN_PROJECT_EPISODE PPE ON PP.PROJECT_ID = PPE.PROJECT_ID AND PP.PLAN_ID = PPE.PLAN_ID
											AND PP.PLAN_VERSION_ID = PPE.PLAN_VERSION_ID AND PP.PROJECT_ID = PPE.PROJECT_ID
											AND PPE.CAMPAIGN_GOAL_ID IN (SELECT CAMPAIGN_GOAL_ID FROM CAMPAIGN_GOALS)
											AND EXISTS (
											SELECT 1 
											FROM PROJECT_EXISTS
											)
											LEFT JOIN REF_PLAN_STATUS RPS 
											ON PP.STATUS_CD = RPS.PLAN_STATUS_ID
											LEFT JOIN REF_CLUSTER RC 
											ON PP.CLUSTER_ID = RC.CLUSTER_ID
											GROUP BY ALL
											ORDER BY PAST_QTR_PROJECT_FLAG, DISPLAY_SEQ

							)
							,CTE_PROJECT AS (
										SELECT DISTINCT PLAN_ID,PROJECT_ID FROM CTE_PLAN_DATA
							)
							,CTE_COLOUR_CHECK AS(
										SELECT CP.PROJECT_ID,
										CASE WHEN PPEH.EPISODE_END_DT < CURRENT_TIMESTAMP() THEN 'N' 
										ELSE CASE 
										WHEN COALESCE(PPEH.MAP_COLOUR_UPDATED_TS, '1990-01-01') > PPP.UPDATE_TS THEN 'Y' 
										ELSE 'N' END END AS FLAG
										FROM PR_PLAN_PROJECT PPP 
										JOIN CTE_PROJECT CP ON 1=1
										LEFT JOIN PR_PROJECT_EPISODE_HEADER PPEH ON PPP.PROJECT_ID = PPEH.PROJECT_ID 
										WHERE PPP.PROJECT_ID = CP.PROJECT_ID 
										AND PPP.PLAN_ID = CP.PLAN_ID
										AND PPP.PLAN_VERSION_ID = (
										SELECT MAX(PLAN_VERSION_ID) 
										FROM PR_PLAN_VERSION 
										WHERE PLAN_ID = PPP.PLAN_ID)
							)
							, CTE_PLAN_ENDDATE AS (
								SELECT CP.PLAN_ID, CP.PROJECT_ID,
									CONCAT('v', MAX(ME.PLAN_VERSION_ID) + 1, ' ', TO_CHAR(MAX(ME.EXEC_END_DT), 'MM/DD/YYYY HH12:MI AM')) AS LAST_OPT_VERSION_TS,
									1 AS PHASE 
								FROM PR_PLAN_PROJECT PPP 
								INNER JOIN MODEL_EXEC ME ON PPP.PLAN_ID = ME.PLAN_ID AND PPP.PLAN_VERSION_ID = ME.PLAN_VERSION_ID AND PPP.OPTIMIZE_YN = 'Y' AND ME.EXEC_STATUS_CD = 'C'
								JOIN CTE_PROJECT CP ON PPP.PLAN_ID = CP.PLAN_ID AND PPP.PROJECT_ID = CP.PROJECT_ID 
								GROUP BY CP.PLAN_ID, CP.PROJECT_ID
							)
							, CTE_EPISODE_ENDDATE AS (
								SELECT CP.PLAN_ID, CP.PROJECT_ID,
									CONCAT('v', MAX(ME.PLAN_VERSION_ID) + 1, ' ', TO_CHAR(MAX(ME.EXEC_END_DT), 'MM/DD/YYYY HH12:MI AM')) AS LAST_OPT_VERSION_TS,
									2 AS PHASE  
								FROM PR_PLAN_PROJECT_EPISODE PPP
								INNER JOIN MODEL_EXEC ME ON PPP.PLAN_ID = ME.PLAN_ID AND PPP.PLAN_VERSION_ID = ME.PLAN_VERSION_ID AND PPP.OPTIMIZE_YN = 'Y' AND ME.EXEC_STATUS_CD = 'C'
								JOIN CTE_PROJECT CP ON PPP.PLAN_ID = CP.PLAN_ID AND PPP.PROJECT_ID = CP.PROJECT_ID 
								GROUP BY CP.PLAN_ID, CP.PROJECT_ID
							)
							, FINAL_RESULT_VERSION AS (
								SELECT PLAN_ID, PROJECT_ID, LAST_OPT_VERSION_TS, PHASE,
									ROW_NUMBER() OVER (PARTITION BY PROJECT_ID ORDER BY PHASE DESC) AS RN
								FROM (
									SELECT * FROM CTE_EPISODE_ENDDATE
									UNION ALL
									SELECT * FROM CTE_PLAN_ENDDATE
								) t
							)
							, CTE_UPDATED_VERSION AS (

								SELECT PROJECT_ID, LAST_OPT_VERSION_TS V_GET_VERSION
								FROM FINAL_RESULT_VERSION
								WHERE RN = 1
							)
							,CTE_FINAL AS(
										SELECT CD.*, V_GET_VERSION,CCC.FLAG FROM CTE_PLAN_DATA CD 
										LEFT JOIN CTE_UPDATED_VERSION CV ON CD.PROJECT_ID =CV.PROJECT_ID
										LEFT JOIN CTE_COLOUR_CHECK CCC ON CCC.PROJECT_ID=CD.PROJECT_ID
							)
							,CTE_VERSION_PLAN AS (
										SELECT ME.PLAN_ID, ME.PLAN_VERSION_ID, MAX(EXEC_END_DT) AS EXEC_END_DT FROM MODEL_EXEC ME 
										JOIN CTE_VERSION_ID MV ON 1=1
										WHERE ME.PLAN_ID=:IN_PLAN_ID AND ME.PLAN_VERSION_ID=MV.V_PLAN_VERSION_ID
										GROUP BY ME.PLAN_ID,ME.PLAN_VERSION_ID
							)
							,CTE_PLAN_DATA1 AS (
												SELECT DISTINCT PP.DISPLAY_SEQ,PP.PROJECT_ID,PL.PLAN_ID,PP1.NAME AS PROJECT_NAME, (PP.PHASE_TYPE) AS "phTypeID",
													(RPPT.DESCRIPTION) AS "ph_description", PP1.IS_EPISODIC, PP1.MEDIA_OUTLET_ID,
													RMO.SHORT_NAME AS NETWORK_NAME, PP.PROJECT_STATUS_CD, PP.STATUS_NAME AS PROJECT_STATUS,
													(PP.PROJ_REACH_PERCENT) AS PROJ_REACH_PERCENT, (PROJ_GRP) AS PROJ_GRP, 
													PP1.START_DATE AS PROJECT_START_DATE,
													PP1.END_DATE AS PROJECT_END_DATE,(PP.ON_MAP_START_DATE) AS START_DATE,
													(PP.ON_MAP_END_DATE) AS END_DATE,(PP.ON_MAP_START_DATE_TS) AS ON_MAP_START_DATE_TS,
													(PP.ON_MAP_END_DATE_TS) AS ON_MAP_END_DATE_TS,
													PP1.TARGET_FREQUENCY AS PROJECT_FREQ, RS1.SEGMENT_NAME AS PROJECT_SEGMENT,
													RS1.SEGMENT_ID AS PROJECT_SEGMENT_ID, RD1.NAME AS PROJECT_DEMO,
													RD1.DEMO_ID AS PROJECT_DEMO_ID, PP1.PREMIERE_DATE,
													CEIL(CASE WHEN DATEDIFF(DAY,(PP.ON_MAP_START_DATE),(PP.ON_MAP_END_DATE)) = 0 THEN 1 
																ELSE DATEDIFF(DAY,(PP.ON_MAP_START_DATE),(PP.ON_MAP_END_DATE)) END / 7) AS NO_OF_WEEKS,
													CEIL(CASE WHEN DATEDIFF(DAY,PP1.START_DATE,PP1.END_DATE) = 0 THEN 1 
																ELSE DATEDIFF(DAY,PP1.START_DATE,PP1.END_DATE) END / 7) AS UPDATED_NO_OF_WKS,
													PP1.CAMPAIGN_TYPE_ID, RCT.NAME AS CAMPAIGN_TYPE, PP.ON_MAP_DEMO AS DEMO_ID,
													RD.NAME AS DEMO, PP.SEGMENT AS SEGMENT_ID,
													(SELECT LISTAGG(COMPONENT_SEGMENT_ID, ', ') FROM REF_SEGMENT_COMPONENT WHERE SEGMENT_ID = PCG.SEGMENT) AS SEGMENT_SELECTED,
													(PP.SEGMENT_TYPE) AS SEGMENT_TYPE, (PP.SEGMENT_AIRBYTE) AS SEGMENT_AIRBYTE, RS.SEGMENT_NAME AS SEGMENT_NAME,
													PL.NAME AS PLAN_NAME, PL_MSG.NAME AS MSG_PLAN_NAME, PL.PLAN_STATUS_ID,
													RPS.NAME AS PLAN_STATUS, PL.COMMENTS AS STATUS_COMMENT, 
													PP.FREQUENCY AS TARGET_FREQUENCY, PP.TARGET_REACH_PCT1 AS TARGET_REACH,
													PP.TARGET_GRP1 AS TARGET_GRP, (PP.EPISODE_PRIORITY) AS EPISODIC_PRIORITY,
													(PP.NO_OF_EPISODE) AS NO_OF_EPISODE,
														CASE WHEN PP.PAST_QTR_PROJECT_FLAG='Y' THEN 'N' ELSE IFNULL(PP.FLAG,'N') END AS COLOUR_CHECK_FLAG,
													PPEH.MAP_COLOUR_UPDATED_TS, PP.PROJ_PRIORITY AS PRIORITY,
													PP1.SCATTER_IMPS, PP1.SUBEVENT_ID, RES.SUBEVENT_NAME,
													(PP.GUIDE_REACH_PCT) AS GUIDE_REACH_PCT, (PP.GUIDE_GRP) AS GUIDE_GRP, (PP.GUIDE_SPOTS) AS GUIDE_SPOTS,
													IFNULL(ME.EXEC_END_DT, PL.UPDATE_DATE) AS EXEC_END_DT,
													PP.CAMPAIGN_GOAL_ID, PP.IS_DIRTY_PROJECT AS IS_DIRTY_PROJECT,
													PP.PAST_QTR_PROJECT_FLAG AS PAST_PROJECT, PP1.USER_COMMENT,
													PP.V_GET_VERSION AS LAST_OPT_VERSION_TS,
													CD.V_NETWORK_TARGET_DEMO_ID AS NETWORK_TARGET_DEMO_ID, 
													CD.V_NETWORK_TARGET_DEMO_NAME AS NETWORK_TARGET_DEMO_NAME,
													CASE WHEN PP1.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID THEN 1 ELSE 99 END AS NETWORK_DISPLAY_SEQ,
													PP.CLUSTER_ID, PP.CLUSTER_NAME, (PP.PROJ_REACH_PERCENT) AS PROJ_PLANNED_REACH, 
													(PP.PROJ_GRP) AS PROJ_PLANNED_GRP, (PP.ON_MAP_PREMIER_DATE) AS ON_MAP_PREMIER_DATE
															FROM CTE_FINAL PP 
															JOIN CTE_DEMO CD ON 1=1  
															JOIN CTE_PLAN_STATUS CPS ON 1=1
														LEFT JOIN PR_PROJECT PP1 ON PP.PROJECT_ID=PP1.PROJECT_ID
														LEFT JOIN REF_PROJECT_PLAN_TYPE RPPT ON PP.PHASE_TYPE = RPPT.TYPE_ID
														LEFT JOIN PR_PROJECT_EPISODE_HEADER PPEH ON PP.PROJECT_ID = PPEH.PROJECT_ID
														LEFT JOIN PR_CAMPAIGN_GOAL PCG ON PP.CAMPAIGN_GOAL_ID = PCG.CAMPAIGN_GOAL_ID
														LEFT JOIN REF_DEMO RD ON RD.DEMO_ID = PP.ON_MAP_DEMO
														LEFT JOIN REF_DEMO RD1 ON RD1.DEMO_ID = PP1.TARGET_DEMO_ID
														LEFT JOIN REF_SEGMENT RS ON RS.SEGMENT_ID = PP.SEGMENT
														LEFT JOIN REF_SEGMENT RS1 ON RS1.SEGMENT_ID = PP1.TARGET_SEGMENT
														LEFT JOIN REF_2E_EVENT_SUBTYPE_PROJECT RES ON PP1.SUBEVENT_ID=RES.SUBEVENT_ID
														LEFT JOIN REF_MEDIA_OUTLET RMO ON PP1.MEDIA_OUTLET_ID=RMO.MEDIA_OUTLET_ID
														LEFT JOIN PR_PLAN PL ON PL.PLAN_ID=:IN_PLAN_ID
														LEFT JOIN PR_PLAN PL_MSG ON PL_MSG.PLAN_ID=PP.PLAN_ID
														LEFT JOIN REF_PLAN_STATUS RPS ON PL.PLAN_STATUS_ID=RPS.PLAN_STATUS_ID
														LEFT JOIN REF_CAMPAIGN_TYPE RCT ON RCT.CAMPAIGN_TYPE_ID=PP1.CAMPAIGN_TYPE_ID
														LEFT JOIN CTE_VERSION_PLAN ME ON ME.PLAN_ID=PL.PLAN_ID AND ME.PLAN_VERSION_ID=(SELECT V_PLAN_VERSION_ID FROM CTE_VERSION_ID)
														WHERE CPS.V_PLAN_STATUS_ID=3

													UNION
													
												SELECT DISTINCT PP.DISPLAY_SEQ, PP.PROJECT_ID,  PL.PLAN_ID,PP1.NAME AS PROJECT_NAME, (PP.PHASE_TYPE) AS "phTypeID",
													(RPPT.DESCRIPTION) AS "ph_description", PP1.IS_EPISODIC, PP1.MEDIA_OUTLET_ID,
													RMO.SHORT_NAME AS NETWORK_NAME, PP.PROJECT_STATUS_CD, PP.STATUS_NAME AS PROJECT_STATUS,
													(PP.PROJ_REACH_PERCENT) AS PROJ_REACH_PERCENT, (PROJ_GRP) AS PROJ_GRP, 
													PP1.START_DATE AS PROJECT_START_DATE,
													PP1.END_DATE AS PROJECT_END_DATE,(PP.ON_MAP_START_DATE) AS START_DATE,
													(PP.ON_MAP_END_DATE) AS END_DATE,(PP.ON_MAP_START_DATE_TS) AS ON_MAP_START_DATE_TS,
													(PP.ON_MAP_END_DATE_TS) AS ON_MAP_END_DATE_TS,
													PP1.TARGET_FREQUENCY AS PROJECT_FREQ, RS1.SEGMENT_NAME AS PROJECT_SEGMENT,
													RS1.SEGMENT_ID AS PROJECT_SEGMENT_ID, RD1.NAME AS PROJECT_DEMO,
													RD1.DEMO_ID AS PROJECT_DEMO_ID, PP1.PREMIERE_DATE,
													CEIL(CASE WHEN DATEDIFF(DAY,(PP.ON_MAP_START_DATE),(PP.ON_MAP_END_DATE)) = 0 THEN 1 
																ELSE DATEDIFF(DAY,(PP.ON_MAP_START_DATE),(PP.ON_MAP_END_DATE)) END / 7) AS NO_OF_WEEKS,
													CEIL(CASE WHEN DATEDIFF(DAY,PP1.START_DATE,PP1.END_DATE) = 0 THEN 1 
																ELSE DATEDIFF(DAY,PP1.START_DATE,PP1.END_DATE) END / 7) AS UPDATED_NO_OF_WKS,
													PP1.CAMPAIGN_TYPE_ID, RCT.NAME AS CAMPAIGN_TYPE, PP.ON_MAP_DEMO AS DEMO_ID,
													RD.NAME AS DEMO, PP.SEGMENT AS SEGMENT_ID,
													(SELECT LISTAGG(COMPONENT_SEGMENT_ID, ', ') FROM REF_SEGMENT_COMPONENT WHERE SEGMENT_ID = PP.SEGMENT) AS SEGMENT_SELECTED,
													(PP.SEGMENT_TYPE) AS SEGMENT_TYPE, (PP.SEGMENT_AIRBYTE) AS SEGMENT_AIRBYTE, RS.SEGMENT_NAME AS SEGMENT_NAME,
													PL.NAME AS PLAN_NAME, PL_MSG.NAME AS MSG_PLAN_NAME, PL.PLAN_STATUS_ID,
													RPS.NAME AS PLAN_STATUS, PL.COMMENTS AS STATUS_COMMENT, 
													PP.FREQUENCY AS TARGET_FREQUENCY, PP.TARGET_REACH_PCT1 AS TARGET_REACH,
													PP.TARGET_GRP1 AS TARGET_GRP, (PP.EPISODE_PRIORITY) AS EPISODIC_PRIORITY,
													(PP.NO_OF_EPISODE) AS NO_OF_EPISODE,
														CASE WHEN PP.PAST_QTR_PROJECT_FLAG='Y' THEN 'N' ELSE IFNULL(PP.FLAG,'N') END AS COLOUR_CHECK_FLAG,
													PPEH.MAP_COLOUR_UPDATED_TS, PP.PROJ_PRIORITY AS PRIORITY,
													PP1.SCATTER_IMPS, PP1.SUBEVENT_ID, RES.SUBEVENT_NAME,
													(PP.GUIDE_REACH_PCT) AS GUIDE_REACH_PCT, (PP.GUIDE_GRP) AS GUIDE_GRP, (PP.GUIDE_SPOTS) AS GUIDE_SPOTS,
													IFNULL(ME.EXEC_END_DT, PL.UPDATE_DATE) AS EXEC_END_DT,
													PP.CAMPAIGN_GOAL_ID, PP.IS_DIRTY_PROJECT AS IS_DIRTY_PROJECT,
													PP.PAST_QTR_PROJECT_FLAG AS PAST_PROJECT, PP1.USER_COMMENT,
													PP.V_GET_VERSION AS LAST_OPT_VERSION_TS,
													CD.V_NETWORK_TARGET_DEMO_ID AS NETWORK_TARGET_DEMO_ID, 
													CD.V_NETWORK_TARGET_DEMO_NAME AS NETWORK_TARGET_DEMO_NAME,
													CASE WHEN PP1.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID THEN 1 ELSE 99 END AS NETWORK_DISPLAY_SEQ,
													PP.CLUSTER_ID, PP.CLUSTER_NAME, (PP.PROJ_REACH_PERCENT) AS PROJ_PLANNED_REACH, 
													(PP.PROJ_GRP) AS PROJ_PLANNED_GRP, (PP.ON_MAP_PREMIER_DATE) AS ON_MAP_PREMIER_DATE
															FROM CTE_FINAL PP 
															JOIN CTE_DEMO CD ON 1=1  
															JOIN CTE_PLAN_STATUS CPS ON 1=1
														LEFT JOIN PR_PROJECT PP1 ON PP.PROJECT_ID=PP1.PROJECT_ID
														LEFT JOIN REF_PROJECT_PLAN_TYPE RPPT ON PP.PHASE_TYPE = RPPT.TYPE_ID
														LEFT JOIN PR_PROJECT_EPISODE_HEADER PPEH ON PP.PROJECT_ID = PPEH.PROJECT_ID
														-- LEFT JOIN PR_CAMPAIGN_GOAL PCG ON PP.CAMPAIGN_GOAL_ID = PCG.CAMPAIGN_GOAL_ID
														LEFT JOIN REF_DEMO RD ON RD.DEMO_ID = PP.ON_MAP_DEMO
														LEFT JOIN REF_DEMO RD1 ON RD1.DEMO_ID = PP1.TARGET_DEMO_ID
														LEFT JOIN REF_SEGMENT RS ON RS.SEGMENT_ID = PP.SEGMENT
														LEFT JOIN REF_SEGMENT RS1 ON RS1.SEGMENT_ID = PP1.TARGET_SEGMENT
														LEFT JOIN REF_2E_EVENT_SUBTYPE_PROJECT RES ON PP1.SUBEVENT_ID=RES.SUBEVENT_ID
														LEFT JOIN REF_MEDIA_OUTLET RMO ON PP1.MEDIA_OUTLET_ID=RMO.MEDIA_OUTLET_ID
														LEFT JOIN PR_PLAN PL ON PL.PLAN_ID=:IN_PLAN_ID
														LEFT JOIN PR_PLAN PL_MSG ON PL_MSG.PLAN_ID=PP.PLAN_ID
														LEFT JOIN REF_PLAN_STATUS RPS ON PL.PLAN_STATUS_ID=RPS.PLAN_STATUS_ID
														LEFT JOIN REF_CAMPAIGN_TYPE RCT ON RCT.CAMPAIGN_TYPE_ID=PP1.CAMPAIGN_TYPE_ID
														LEFT JOIN CTE_VERSION_PLAN ME ON ME.PLAN_ID=PL.PLAN_ID AND ME.PLAN_VERSION_ID=(SELECT V_PLAN_VERSION_ID FROM CTE_VERSION_ID)
														WHERE CPS.V_PLAN_STATUS_ID<>3
							) 
							,CTE_SPOT_BASED AS(
												SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE ,PPS.CAMPAIGN_GOAL_ID, PPS.PROJECT_ID, SUM(PPS.PLANNED_UNITS) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_SCHEDULE PPS 
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												JOIN CTE_VERSION_ID CV ON 1=1
												JOIN PR_PLAN_PROJECT PPP on  PPS.PLAN_ID=:IN_PLAN_ID AND PPS.PLAN_VERSION_ID=0 
												AND PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
												AND PPS.PLAN_ID=PPP.PLAN_ID AND PPP.PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID
												AND PPS.PROJECT_ID=PPP.PROJECT_ID 
												AND CASE WHEN CS.V_PERIOD_ID>316 THEN PPP.STATUS_CD in (9,10) ELSE 1=1 END	
												WHERE CS.V_PLAN_STATUS_ID=3
												group by V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID
														
											UNION	
											
											SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,CAMPAIGN_GOAL_ID,PPS.PROJECT_ID, SUM(PLANNED_UNITS) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_SCHEDULE PPS
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 and PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
												and PROJECT_TYPE=CS.V_PLAN_TYPE
												WHERE PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
												and PPS.PLAN_ID<>:IN_PLAN_ID AND CS.V_PLAN_STATUS_ID=3
												group by V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID
												
											UNION
											
												SELECT V_WEEK_START_DATE,NULL CAMPAIGN_GOAL_ID,PPPS.PROJECT_ID, UNIT_COUNT AS UNITS,CONCAT('WEEK',(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_PROJECT_SPOTS  PPPS
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_VERSION_ID CV ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												JOIN PR_PLAN_PROJECT PPP on PPP.PLAN_ID=PPPS.PLAN_ID and PPP.PLAN_VERSION_ID=PPPS.PLAN_VERSION_ID  
												AND PPP.PROJECT_ID=PPPS.PROJECT_ID 
												WHERE PPPS.PLAN_ID=:IN_PLAN_ID AND PPPS.PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID 
												AND PPP.STATUS_CD not in (9,10) AND CS.V_PLAN_STATUS_ID=3
												and WEEK_DATE=CW.V_WEEK_START_DATE
												
											UNION
												
											SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,NULL AS CAMPAIGN_GOAL_ID, PROJECT_ID, UNIT_COUNT AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_PROJECT_SPOTS PPS
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_VERSION_ID CV ON 1=1
												JOIN CTE_PLAN_STATUS CPS ON 1=1
												WHERE PPS.PLAN_ID=:IN_PLAN_ID 
												AND PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID AND WEEK_DATE=CW.V_WEEK_START_DATE
												AND CPS.V_PLAN_STATUS_ID<>3
												group by V_WEEK_START_DATE,PPS.PROJECT_ID,UNIT_COUNT,CAMPAIGN_GOAL_ID
												
												
											UNION
											
												SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,NULL AS CAMPAIGN_GOAL_ID,PPS.PROJECT_ID, SUM(PPS.PLANNED_UNITS) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_SCHEDULE PPS
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												JOIN CTE_QTR_DATE CV ON 1=1
												JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 
												AND PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
												and date(PP.START_DATE)<=date(CV.V_QTR_END_DATE)   
												and PROJECT_TYPE=CS.V_PLAN_TYPE
												WHERE PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
												and PPS.PLAN_ID<>:IN_PLAN_ID  AND CS.V_PLAN_STATUS_ID<>3
												group by V_WEEK_START_DATE,PPS.PROJECT_ID,CAMPAIGN_GOAL_ID
							)
							,CTE_GRP_BASED AS(
											SELECT (V_WEEK_START_DATE) V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID, PPS.PROJECT_ID, 
												SUM(PPS.PLANNED_GRP) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK  
												FROM PR_PLAN_SCHEDULE PPS 
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_VERSION_ID CV ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												JOIN PR_PLAN_PROJECT PPP on  PPS.PLAN_ID=:IN_PLAN_ID AND PPS.PLAN_VERSION_ID=0 
												AND PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
												AND PPS.PLAN_ID=PPP.PLAN_ID AND PPP.PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID
												AND PPS.PROJECT_ID=PPP.PROJECT_ID AND PPP.STATUS_CD in (9,10)
												WHERE CS.V_PLAN_STATUS_ID=3
												group by V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID
												
											UNION
											SELECT (V_WEEK_START_DATE) V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID, 
											SUM(PLANNED_GRP) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_SCHEDULE PPS
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 and PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
												and PROJECT_TYPE=CS.V_PLAN_TYPE
												WHERE PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
												and PPS.PLAN_ID<>:IN_PLAN_ID AND CS.V_PLAN_STATUS_ID=3
												group by V_WEEK_START_DATE,PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID 
												
											UNION
											SELECT V_WEEK_START_DATE,NULL CAMPAIGN_GOAL_ID,PPPS.PROJECT_ID, UNIT_COUNT AS UNITS,CONCAT('WEEK',(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_PROJECT_SPOTS PPPS
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_VERSION_ID CV ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												JOIN PR_PLAN_PROJECT PPP on PPP.PLAN_ID=PPPS.PLAN_ID and PPP.PLAN_VERSION_ID=PPPS.PLAN_VERSION_ID  
												AND PPP.PROJECT_ID=PPPS.PROJECT_ID 
												WHERE PPPS.PLAN_ID=:IN_PLAN_ID AND PPPS.PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID 
												AND  PPP.STATUS_CD not in (9,10) and WEEK_DATE=CW.V_WEEK_START_DATE
												AND CS.V_PLAN_STATUS_ID=3
											UNION
											SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,NULL AS CAMPAIGN_GOAL_ID, PROJECT_ID, UNIT_COUNT AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_PROJECT_SPOTS PPS
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_VERSION_ID CV ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												WHERE PPS.PLAN_ID=:IN_PLAN_ID AND CS.V_PLAN_STATUS_ID<>3
												AND PLAN_VERSION_ID=CV.V_PLAN_VERSION_ID AND WEEK_DATE=CW.V_WEEK_START_DATE
												group by V_WEEK_START_DATE,PPS.PROJECT_ID,UNIT_COUNT,CAMPAIGN_GOAL_ID
												
											UNION 
												SELECT (V_WEEK_START_DATE) AS V_WEEK_START_DATE,NULL AS CAMPAIGN_GOAL_ID,PPS.PROJECT_ID, SUM(PLANNED_GRP) AS UNITS,CONCAT('WEEK',MAX(CW.WEEK_COUNT)) AS WEEK
												FROM PR_PLAN_SCHEDULE PPS
												JOIN CTE_WEEK_DATE CW ON 1=1
												JOIN CTE_PLAN_STATUS CS ON 1=1
												JOIN CTE_QTR_DATE CV ON 1=1
												JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 
												AND PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
												and date(PP.START_DATE)<=date(CV.V_QTR_END_DATE)   
												and PROJECT_TYPE=CS.V_PLAN_TYPE
												WHERE PPS.START_DATE BETWEEN CW.V_WEEK_START_DATE AND CW.V_WEEK_END_DATE
												and PPS.PLAN_ID<>:IN_PLAN_ID AND CS.V_PLAN_STATUS_ID<>3
												group by V_WEEK_START_DATE,PPS.PROJECT_ID,CAMPAIGN_GOAL_ID 
							)
							,CTE_SPOT_BASED_DATA AS(
											SELECT PP.*,WD.V_WEEK_START_DATE,WEEK,UNITS
											FROM CTE_PLAN_DATA1 PP
											JOIN CTE_PLAN_STATUS CS ON 1=1
											LEFT JOIN CTE_SPOT_BASED WD ON
											PP.PROJECT_ID = WD.PROJECT_ID 
											WHERE :IN_OUTPUT_TYPE=1 AND CS.V_PLAN_STATUS_ID<>3--AND V_WEEK_START_DATE IS NOT NULL

											UNION

											SELECT PP.*,WD.V_WEEK_START_DATE,WEEK,UNITS
											FROM CTE_PLAN_DATA1 PP
											JOIN CTE_PLAN_STATUS CS ON 1=1
											LEFT JOIN CTE_SPOT_BASED WD ON
											CASE WHEN WD.CAMPAIGN_GOAL_ID IS NULL THEN
											PP.PROJECT_ID = WD.PROJECT_ID ELSE 
											PP.CAMPAIGN_GOAL_ID=WD.CAMPAIGN_GOAL_ID END
											WHERE :IN_OUTPUT_TYPE=1 AND CS.V_PLAN_STATUS_ID=3--AND V_WEEK_START_DATE IS NOT NULL
							)
							,CTE_GRP_BASED_DATA AS(
											SELECT PP.*,WD.V_WEEK_START_DATE,WEEK,UNITS
											FROM CTE_PLAN_DATA1 PP
											JOIN CTE_PLAN_STATUS CS ON 1=1
											LEFT JOIN CTE_GRP_BASED WD 
											ON PP.PROJECT_ID = WD.PROJECT_ID
											WHERE :IN_OUTPUT_TYPE<>1 AND CS.V_PLAN_STATUS_ID<>3 --AND WD.V_WEEK_START_DATE IS NOT NULL

											UNION

											SELECT PP.*,WD.V_WEEK_START_DATE,WEEK,UNITS
											FROM CTE_PLAN_DATA1 PP
											JOIN CTE_PLAN_STATUS CS ON 1=1
											LEFT JOIN CTE_GRP_BASED WD 
											ON CASE WHEN WD.CAMPAIGN_GOAL_ID IS NULL THEN
											PP.PROJECT_ID = WD.PROJECT_ID ELSE 
											PP.CAMPAIGN_GOAL_ID=WD.CAMPAIGN_GOAL_ID END
											WHERE :IN_OUTPUT_TYPE<>1 AND CS.V_PLAN_STATUS_ID=3 --AND WD.V_WEEK_START_DATE IS NOT NULL
							)

							SELECT * FROM CTE_SPOT_BASED_DATA
							UNION
							SELECT * FROM CTE_GRP_BASED_DATA;`,
			}
		},

		getPlanData: `
					select PROJECT_ID,SUM(PLANNED_UNITS) COMMULATIVE_GRP from PR_PLAN_SCHEDULE
					where PLAN_ID=:IN_PLAN_ID 
					and START_DATE<=CURRENT_DATE()
					and :IN_OUTPUT_TYPE =1
					GROUP BY PROJECT_ID
				UNION
					select PROJECT_ID,SUM(PLANNED_GRP) COMMULATIVE_GRP from PR_PLAN_SCHEDULE
					where PLAN_ID=:IN_PLAN_ID 
					and START_DATE<=CURRENT_DATE()
					and :IN_OUTPUT_TYPE <>1
					GROUP BY PROJECT_ID;`,

		getEpisodicDataOptimized: `
						-- :IN_MEDIA_OUTLET_ID , 
						-- :IN_QTR, 
						-- :IN_PLAN_ID , 
						-- :IN_OUTPUT_TYPE 

						WITH CTE_PLAN_TYPE AS (
							SELECT PP.PERIOD_ID V_PERIOD_ID, IFNULL(PP.PLAN_STATUS_ID,0) V_PLAN_STATUS_ID, PLAN_TYPE AS V_PLAN_TYPE,
							CASE WHEN V_PLAN_TYPE=1 THEN 1 WHEN V_PLAN_TYPE = 2 THEN 3 END AS V_MODEL_TYPE
							FROM PR_PLAN PP WHERE PLAN_ID= :IN_PLAN_ID
							AND MEDIA_OUTLET_ID= :IN_MEDIA_OUTLET_ID LIMIT 1
						)  -- SELECT * FROM CTE_PLAN_TYPE;

						,CTE_MAX_PLAN_VERSION AS (
							SELECT MAX(PLAN_VERSION_ID) AS V_PLAN_VERSION_ID FROM PR_PLAN_VERSION 
							WHERE PLAN_ID=:IN_PLAN_ID
						) -- SELECT * FROM CTE_MAX_PLAN_VERSION;

						,CTE_QTR AS (
							SELECT START_DATE AS V_QTR_START_DATE, END_DATE AS V_QTR_END_DATE FROM REF_CAL_PERIOD 
							WHERE NAME = :IN_QTR
							AND PERIOD_TYPE_CD='Q'  
						) -- SELECT * FROM CTE_QTR;
						,CTE_FUTURE_PERIOD AS (
							SELECT PERIOD_ID AS V_FUTURE_PERIOD_ID FROM REF_CAL_PERIOD 
							WHERE START_DATE=(SELECT DATEADD(DAY, 1, END_DATE) FROM REF_CAL_PERIOD WHERE 
							PERIOD_ID=(SELECT V_PERIOD_ID FROM CTE_PLAN_TYPE) AND PERIOD_TYPE_CD='Q' LIMIT 1)
							AND PERIOD_TYPE_CD='Q' LIMIT 1
						) -- SELECT * FROM CTE_FUTURE_PERIOD; 

						,CTE_FUTURE_QTR AS (
							SELECT END_DATE AS V_FUTURE_QTR_END_DATE FROM REF_CAL_PERIOD WHERE 
							PERIOD_ID= (SELECT V_FUTURE_PERIOD_ID FROM CTE_FUTURE_PERIOD)
						) -- SELECT * FROM CTE_FUTURE_QTR;

						,MAX_PLAN_VERSION AS (
							SELECT PLAN_ID, MAX(PLAN_VERSION_ID) PLAN_VERSION_ID FROM MODEL_EXEC M 
							WHERE M.MODEL_TYPE_ID=(SELECT V_MODEL_TYPE FROM CTE_PLAN_TYPE)
							AND M.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
							AND M.EXEC_STATUS_CD='C'
							GROUP BY PLAN_ID
						)  -- SELECT * FROM MAX_PLAN_VERSION; 
						,CTE_WEEKS AS (
							SELECT START_DATE WSTART_DATE,END_DATE WEND_DATE,CONCAT('EP_Wek',ROW_NUMBER() OVER (ORDER BY START_DATE)) WEEK
							FROM REF_CAL_PERIOD RCP WHERE PERIOD_TYPE_CD = 'W'
							AND RCP.START_DATE BETWEEN 
								(SELECT V_QTR_START_DATE FROM CTE_QTR) AND (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR)
						) -- SELECT * FROM CTE_WEEKS;
						,CTE_PRE_FINAL AS (
							SELECT 
								PP.EPISODE_ID, PP.PROJECT_ID, PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS,PP.ON_MAP_START_DATE,
								PP.ON_MAP_END_DATE FROM PR_PLAN_PROJECT_EPISODE PP
								WHERE PP.PLAN_ID=:IN_PLAN_ID
								AND PP.PLAN_VERSION_ID= (SELECT V_PLAN_VERSION_ID FROM CTE_MAX_PLAN_VERSION) 
								
							UNION
								
							SELECT  
								PP.EPISODE_ID, PP.PROJECT_ID, PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS ,PP.ON_MAP_START_DATE,
								PP.ON_MAP_END_DATE FROM PR_PLAN_PROJECT_EPISODE PP
								JOIN PR_PLAN_SCHEDULE_EPISODE PPS ON PP.PLAN_ID=PPS.PLAN_ID AND PPS.PLAN_VERSION_ID=0 
								AND PP.PROJECT_ID=PPS.PROJECT_ID AND PPS.EPISODE_ID=PP.EPISODE_ID
								JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.PLAN_TYPE=  (SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE) 
									AND P.MEDIA_OUTLET_ID=  :IN_MEDIA_OUTLET_ID
								JOIN MAX_PLAN_VERSION M ON PP.PLAN_ID = M.PLAN_ID
								WHERE DATE(PPS.START_DATE) BETWEEN (SELECT V_QTR_START_DATE FROM CTE_QTR) 
									AND  (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR) 
								AND PP.PLAN_VERSION_ID = M.PLAN_VERSION_ID
								and P.PLAN_ID<> :IN_PLAN_ID
								AND PP.CAMPAIGN_GOAL_ID IN (
									SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
									FROM PR_PLAN_SCHEDULE_EPISODE PPS 
									INNER JOIN PR_PLAN_PROJECT_EPISODE PP ON PPS.CAMPAIGN_GOAL_ID=PP.CAMPAIGN_GOAL_ID
									AND PPS.EPISODE_ID=PP.EPISODE_ID
									JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID 
									AND P.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
									AND PPS.START_DATE BETWEEN (SELECT V_QTR_START_DATE FROM CTE_QTR) 
									AND (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR)
									AND P.PLAN_TYPE= (SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE)
									)
								GROUP by PP.PROJECT_ID,PP.EPISODE_ID,PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS ,
								PP.ON_MAP_START_DATE,PP.ON_MAP_END_DATE 
						) 
						SELECT CPF.PROJECT_ID,CPF.EPISODE_ID,CPF.CAMPAIGN_GOAL_ID,
						TO_CHAR(CPF.EPISODE_START_TS,'MM/DD/YYYY HH12:MI:SS PM') EPISODE_START_TS,
						TO_CHAR(CPF.EPISODE_START_TS,'MM/DD/YYYY HH12:MI:SS PM') EPISODE_AIR_DATE_DIS,
						TO_CHAR(CPF.ON_MAP_START_DATE,'MM/DD/YYYY') START_TS_DIS,
						TO_CHAR(CPF.ON_MAP_END_DATE,'MM/DD/YYYY') END_TS_DIS,
						WSTART_DATE,WEEK,UNIT_COUNT UNITS FROM CTE_PRE_FINAL CPF
							LEFT JOIN (
								SELECT PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,PPS.EPISODE_ID,WSTART_DATE,WEEK,
								(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN SUM(PPS.PLANNED_UNITS) ELSE SUM(PPS.PLANNED_GRP) END) UNIT_COUNT
								FROM PR_PLAN_SCHEDULE_EPISODE PPS 
								JOIN CTE_WEEKS 
								JOIN PR_PLAN_PROJECT_EPISODE PPP ON PPS.PLAN_ID=:IN_PLAN_ID 
								AND PPS.PLAN_VERSION_ID=0 
								AND PPS.START_DATE BETWEEN WSTART_DATE AND WEND_DATE
								AND PPS.PLAN_ID=PPP.PLAN_ID AND PPP.PLAN_VERSION_ID= (SELECT V_PLAN_VERSION_ID FROM CTE_MAX_PLAN_VERSION)
								AND PPS.PROJECT_ID=PPP.PROJECT_ID AND PPS.EPISODE_ID=PPP.EPISODE_ID
								AND CASE WHEN (SELECT V_PERIOD_ID FROM CTE_PLAN_TYPE) > 316 THEN PPP.STATUS_CD IN (9,10) ELSE 1 = 1 END	
								GROUP BY PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,PPS.EPISODE_ID,WSTART_DATE,WEEK

								UNION	
								
								SELECT PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,PPS.EPISODE_ID,WSTART_DATE,WEEK,
								(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN SUM(PLANNED_UNITS) ELSE SUM(PPS.PLANNED_GRP) END) UNIT_COUNT
									FROM PR_PLAN_SCHEDULE_EPISODE PPS
									JOIN CTE_WEEKS
									JOIN PR_PROJECT PP on PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0 
									and PPS.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
									AND PROJECT_TYPE= (SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE)
									WHERE PPS.START_DATE BETWEEN WSTART_DATE AND WEND_DATE
									and PPS.PLAN_ID<>:IN_PLAN_ID
									GROUP BY PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,PPS.EPISODE_ID,WSTART_DATE,WEEK
									
								UNION
								SELECT NULL CAMPAIGN_GOAL_ID,PPPS.PROJECT_ID,PPPS.EPISODE_ID,WSTART_DATE,WEEK,UNIT_COUNT 
									FROM PR_PLAN_PROJECT_SPOTS_EPISODE  PPPS
									JOIN CTE_WEEKS
									JOIN PR_PLAN_PROJECT_EPISODE PPP on PPP.PLAN_ID=PPPS.PLAN_ID and PPP.PLAN_VERSION_ID=PPPS.PLAN_VERSION_ID  
									AND PPP.PROJECT_ID=PPPS.PROJECT_ID AND PPPS.EPISODE_ID=PPP.EPISODE_ID
									WHERE PPPS.PLAN_ID=:IN_PLAN_ID
									AND PPPS.PLAN_VERSION_ID= (SELECT V_PLAN_VERSION_ID FROM CTE_MAX_PLAN_VERSION)
									AND PPP.STATUS_CD NOT IN (9,10) 
									and WEEK_DATE=WSTART_DATE
									GROUP BY CAMPAIGN_GOAL_ID,PPPS.PROJECT_ID,PPPS.EPISODE_ID,WSTART_DATE,WEEK,UNIT_COUNT
									
							) FI ON CASE WHEN CPF.CAMPAIGN_GOAL_ID IS NULL THEN CPF.PROJECT_ID = FI.PROJECT_ID AND CPF.EPISODE_ID = FI.EPISODE_ID ELSE CPF.CAMPAIGN_GOAL_ID = FI.CAMPAIGN_GOAL_ID END
							ORDER BY CPF.PROJECT_ID,CPF.EPISODE_ID,CPF.CAMPAIGN_GOAL_ID,WSTART_DATE;`,

		getEpisodicDataSaved: `
							WITH CTE_PLAN_TYPE AS (
					SELECT PP.PERIOD_ID V_PERIOD_ID, IFNULL(PP.PLAN_STATUS_ID,0) V_PLAN_STATUS_ID, PLAN_TYPE AS V_PLAN_TYPE,
					CASE WHEN V_PLAN_TYPE=1 THEN 1 WHEN V_PLAN_TYPE = 2 THEN 3 END AS V_MODEL_TYPE
					FROM PR_PLAN PP WHERE PLAN_ID= :IN_PLAN_ID
					AND MEDIA_OUTLET_ID= :IN_MEDIA_OUTLET_ID LIMIT 1
					)  -- SELECT * FROM CTE_PLAN_TYPE;

					,CTE_MAX_PLAN_VERSION AS (
					SELECT MAX(PLAN_VERSION_ID) AS V_PLAN_VERSION_ID FROM PR_PLAN_VERSION 
					WHERE PLAN_ID=:IN_PLAN_ID
					) -- SELECT * FROM CTE_MAX_PLAN_VERSION;

					,CTE_QTR AS (
					SELECT START_DATE AS V_QTR_START_DATE, END_DATE AS V_QTR_END_DATE FROM REF_CAL_PERIOD 
					WHERE NAME = :IN_QTR
					AND PERIOD_TYPE_CD='Q'  
					) -- SELECT * FROM CTE_QTR;
					,CTE_FUTURE_PERIOD AS (
					SELECT PERIOD_ID AS V_FUTURE_PERIOD_ID FROM REF_CAL_PERIOD 
					WHERE START_DATE=(SELECT DATEADD(DAY, 1, END_DATE) FROM REF_CAL_PERIOD WHERE 
					PERIOD_ID=(SELECT V_PERIOD_ID FROM CTE_PLAN_TYPE) AND PERIOD_TYPE_CD='Q' LIMIT 1)
					AND PERIOD_TYPE_CD='Q' LIMIT 1
					) -- SELECT * FROM CTE_FUTURE_PERIOD; 

					,CTE_FUTURE_QTR AS (
					SELECT END_DATE AS V_FUTURE_QTR_END_DATE FROM REF_CAL_PERIOD WHERE 
					PERIOD_ID= (SELECT V_FUTURE_PERIOD_ID FROM CTE_FUTURE_PERIOD)
					) -- SELECT * FROM CTE_FUTURE_QTR;

					,MAX_PLAN_VERSION AS (
					SELECT PLAN_ID, MAX(PLAN_VERSION_ID) PLAN_VERSION_ID FROM MODEL_EXEC M 
					WHERE M.MODEL_TYPE_ID=(SELECT V_MODEL_TYPE FROM CTE_PLAN_TYPE)
					AND M.MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
					AND M.EXEC_STATUS_CD='C'
					GROUP BY PLAN_ID
					)  -- SELECT * FROM MAX_PLAN_VERSION; 
					,CTE_WEEKS AS (
					SELECT START_DATE WSTART_DATE,END_DATE WEND_DATE,CONCAT('EP_Wek',ROW_NUMBER() OVER (ORDER BY START_DATE)) WEEK
					FROM REF_CAL_PERIOD RCP WHERE PERIOD_TYPE_CD = 'W'
					AND RCP.START_DATE BETWEEN 
					(SELECT V_QTR_START_DATE FROM CTE_QTR) AND (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR)
					) -- SELECT * FROM CTE_WEEKS;
					,CTE_PRE_FINAL AS (
					SELECT 
					PP.EPISODE_ID, PP.PROJECT_ID, PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS,PP.ON_MAP_START_DATE,
					PP.ON_MAP_END_DATE FROM PR_PLAN_PROJECT_EPISODE PP
					WHERE PP.PLAN_ID=:IN_PLAN_ID
					AND PP.PLAN_VERSION_ID= (SELECT V_PLAN_VERSION_ID FROM CTE_MAX_PLAN_VERSION) 

					UNION

					SELECT  
					PP.EPISODE_ID, PP.PROJECT_ID, PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS ,PP.ON_MAP_START_DATE,
					PP.ON_MAP_END_DATE FROM PR_PLAN_PROJECT_EPISODE PP
					JOIN PR_PLAN_SCHEDULE_EPISODE PPS ON PP.PLAN_ID=PPS.PLAN_ID AND PPS.PLAN_VERSION_ID=0 
					AND PP.PROJECT_ID=PPS.PROJECT_ID AND PPS.EPISODE_ID=PP.EPISODE_ID
					JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID and P.PLAN_TYPE=  (SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE) 
						AND P.MEDIA_OUTLET_ID=  :IN_MEDIA_OUTLET_ID
					JOIN MAX_PLAN_VERSION M ON PP.PLAN_ID = M.PLAN_ID
					WHERE DATE(PPS.START_DATE) BETWEEN (SELECT V_QTR_START_DATE FROM CTE_QTR) 
						AND  (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR) 
					AND PP.PLAN_VERSION_ID = M.PLAN_VERSION_ID
					and P.PLAN_ID<> :IN_PLAN_ID
					AND PP.CAMPAIGN_GOAL_ID IN (
						SELECT DISTINCT PP.CAMPAIGN_GOAL_ID
						FROM PR_PLAN_SCHEDULE_EPISODE PPS 
						INNER JOIN PR_PLAN_PROJECT_EPISODE PP ON PPS.CAMPAIGN_GOAL_ID=PP.CAMPAIGN_GOAL_ID
						AND PPS.EPISODE_ID=PP.EPISODE_ID
						JOIN PR_PLAN P on PP.PLAN_ID=P.PLAN_ID 
						AND P.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
						AND PPS.START_DATE BETWEEN (SELECT V_QTR_START_DATE FROM CTE_QTR) 
						AND (SELECT V_FUTURE_QTR_END_DATE FROM CTE_FUTURE_QTR)
						AND P.PLAN_TYPE= (SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE)
						)
					GROUP by PP.PROJECT_ID,PP.EPISODE_ID,PP.CAMPAIGN_GOAL_ID,PP.PLAN_ID,PP.EPISODE_START_TS ,
					PP.ON_MAP_START_DATE,PP.ON_MAP_END_DATE 
					) 

					SELECT CPF.PROJECT_ID,CPF.EPISODE_ID,CPF.CAMPAIGN_GOAL_ID,
					TO_CHAR(CPF.EPISODE_START_TS,'MM/DD/YYYY HH12:MI:SS PM') EPISODE_START_TS,
					TO_CHAR(CPF.EPISODE_START_TS,'MM/DD/YYYY HH12:MI:SS PM') EPISODE_AIR_DATE_DIS,
					TO_CHAR(CPF.ON_MAP_START_DATE,'MM/DD/YYYY') START_TS_DIS,
					TO_CHAR(CPF.ON_MAP_END_DATE,'MM/DD/YYYY') END_TS_DIS,
					WSTART_DATE,WEEK,UNIT_COUNT UNITS FROM CTE_PRE_FINAL CPF
					LEFT JOIN (
						SELECT NULL CAMPAIGN_GOAL_ID,PROJECT_ID,EPISODE_ID,UNIT_COUNT,CW.WSTART_DATE,WEEK 
						FROM PR_PLAN_PROJECT_SPOTS_EPISODE_MAP PPM 
						INNER JOIN CTE_WEEKS CW ON CW.WSTART_DATE = PPM.WEEK_DATE 
						WHERE PLAN_ID = :IN_PLAN_ID AND PLAN_VERSION_ID = (SELECT V_PLAN_VERSION_ID FROM CTE_MAX_PLAN_VERSION)

						UNION 

						
						SELECT PPS.CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,EPISODE_ID, SUM(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN PPS.PLANNED_UNITS ELSE PPS.PLANNED_GRP END) UNIT_COUNT,
						CW.WSTART_DATE,WEEK,
						FROM PR_PLAN_SCHEDULE_EPISODE PPS
						JOIN CTE_WEEKS CW ON PPS.START_DATE BETWEEN CW.WSTART_DATE AND CW.WEND_DATE
						JOIN PR_PROJECT PP ON PPS.PROJECT_ID=PP.PROJECT_ID and PPS.PLAN_VERSION_ID=0
						AND PPS.MEDIA_OUTLET_ID= :IN_MEDIA_OUTLET_ID
						AND DATE(PP.START_DATE) <= (SELECT V_QTR_END_DATE FROM CTE_QTR)
						and PROJECT_TYPE=(SELECT V_PLAN_TYPE FROM CTE_PLAN_TYPE) 
						WHERE PPS.PLAN_ID<> :IN_PLAN_ID
						GROUP BY CAMPAIGN_GOAL_ID,PPS.PROJECT_ID,EPISODE_ID,CW.WSTART_DATE,WEEK
						) FI ON CPF.PROJECT_ID=FI.PROJECT_ID AND  CPF.EPISODE_ID = FI.EPISODE_ID
						ORDER BY CPF.PROJECT_ID,CPF.EPISODE_ID,CPF.CAMPAIGN_GOAL_ID,WSTART_DATE;`,

		getEpisodicData2: `
						SELECT PROJECT_ID,SUM(PLANNED_UNITS) COMMULATIVE_GRP FROM PR_PLAN_SCHEDULE_EPISODE 
				WHERE PLAN_ID= :IN_PLAN_ID and START_DATE<=CURRENT_DATE() AND :IN_OUTPUT_TYPE =1 
				GROUP BY PROJECT_ID 
				UNION
				SELECT PROJECT_ID,SUM(PLANNED_GRP) COMMULATIVE_GRP FROM PR_PLAN_SCHEDULE_EPISODE 
				WHERE PLAN_ID=:IN_PLAN_ID and START_DATE<=CURRENT_DATE() AND :IN_OUTPUT_TYPE =2
				GROUP BY PROJECT_ID;`,

		getEpisodeData3: `
						WITH CTE_VERSION AS (
					SELECT MAX(PLAN_VERSION_ID) PLAN_VERSION_ID FROM PR_PLAN_VERSION WHERE PLAN_ID=:IN_PLAN_ID
				)
				SELECT PPJ.EPISODE_DTL_JSON
						FROM PR_PLAN_PROJECT_EPISODE PP
						JOIN PR_PLAN_PROJECT_EPISODE_JSON PPJ ON PP.PROJECT_ID = PPJ.PROJECT_ID AND
						PP.PLAN_ID = PPJ.PLAN_ID AND PP.PLAN_VERSION_ID = PPJ.PLAN_VERSION_ID
						WHERE PP.PLAN_ID=:IN_PLAN_ID AND PP.PLAN_VERSION_ID=(SELECT PLAN_VERSION_ID FROM CTE_VERSION)
						GROUP BY PP.PROJECT_ID,PPJ.EPISODE_DTL_JSON;`,

		validateNetParams: `
						-- 1.IN_QTR
						-- 2.IN_MEDIA_OUTLET_ID

						WITH CTE_QTR AS (
							SELECT START_DATE V_START_DATE, END_DATE V_END_DATE FROM REF_CAL_PERIOD WHERE FISCAL_QTR = :IN_QTR
							and PERIOD_TYPE_CD='Q'
						) -- SELECT * FROM CTE_QTR; 
						SELECT VALIDATION_ID,VALIDATION_MESSAGE FROM (
									SELECT CASE WHEN count(1)= 0 THEN 1 END ERROR_ID from REF_DAYPART RD JOIN REF_DAYPART_DEFN RDD 
									ON RD.DAYPART_ID=RDD.DAYPART_ID WHERE MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
									AND RD.ACTIVE_YN='Y'
									UNION ALL 
									SELECT CASE WHEN count(1)=0 THEN 3 END ERROR_ID FROM REF_SPOTS_PER_HOUR  WHERE MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
									UNION ALL 
									SELECT CASE WHEN count(1)=0 THEN 2 END ERROR_ID FROM PR_PROMO_CAPACITY  WHERE MEDIA_OUTLET_ID=:IN_MEDIA_OUTLET_ID
									AND START_DATE>= (SELECT V_START_DATE FROM CTE_QTR) 
									AND END_DATE <= (SELECT V_END_DATE FROM CTE_QTR) 
								) ERROR_NUM JOIN REF_MAP_VALIDATION RMV on ERROR_NUM.ERROR_ID=RMV.VALIDATION_ID;`,

		episodicRulesPopData1: `
								SELECT PDL.PROJECT_ID,PDL.EPISODE_ID,BROADCAST_DATE,TO_CHAR(AIR_TIME,'HH12:MI PM') START_TIME,TO_CHAR(DATEADD(SECOND,DURATION,AIR_TIME),'HH12:MI PM') END_TIME,DOW ,
								PL_START_DT,PL_END_DT,(DATEDIFF(DAYS,PL_START_DT,PL_END_DT) + 1) PLANNING_DAYS, IFNULL(TGT_SPOT, 0) TGT_SPOT,TGT_GRP,
								IS_EPISODE_CHANGED_DB,IS_EPISODE_ATT_EDITED,STATUS
								FROM PR_PROJECT_EPISODE_DTL PDL JOIN PR_PROJECT_EPISODE_DTL_UI UI ON UI.PROJECT_ID = PDL.PROJECT_ID AND PDL.EPISODE_ID = UI.EPISODE_ID WHERE PDL.PROJECT_ID = :IN_PROJECT_ID;`,

		episodicRulesPopData2: `
								SELECT EPISODE_ID,PET.CONSTRAINT_ID,GET_OFFSET_TO_TIME(PET.START_OFFSET) START_TIME,GET_OFFSET_TO_TIME(PET.END_OFFSET) END_TIME,PET.DAYS_AIRBYTE FROM PR_PROJECT_EPISODE_CONSTRAINT PEC INNER JOIN
								PR_PROJECT_EPISODE_TIMEBAND PET ON PET.CONSTRAINT_TYPE_ID = PEC.CONSTRAINT_TYPE_ID AND PET.CONSTRAINT_ID = PEC.CONSTRAINT_KEY
								WHERE PEC.CONSTRAINT_TYPE_ID = 4 AND PEC.PROJECT_ID = :IN_PROJECT_ID ORDER BY EPISODE_ID;`,

		episodeHeaderDataQuery: `
								SELECT PROJECT_ID,EPISODE_START_DT,EPISODE_END_DT,
								TO_CHAR(EPISODE_START_TIME,'HH12:MI PM') EPISODE_START_TIME,TO_CHAR(EPISODE_END_TIME,'HH12:MI PM') EPISODE_END_TIME,TGT_SPOTS,TGT_GRP,DOW_AIRBYTE FROM PR_PROJECT_EPISODE_HEADER WHERE PROJECT_ID = :IN_PROJECT_ID;`,

		episodeBlackOut: `
						SELECT PROJECT_ID,START_DATE,END_DATE FROM PR_PROJECT_BLACKOUT_PERIOD WHERE PROJECT_ID = :IN_PROJECT_ID;`,

		episodeGridDetails: `
							SELECT PDL.PROJECT_ID,PDL.EPISODE_ID,BROADCAST_DATE,TO_CHAR(AIR_TIME,'HH12:MI PM') START_TIME,TO_CHAR(DATEADD(SECOND,DURATION,AIR_TIME),'HH12:MI PM') END_TIME,DOW ,
							PL_START_DT,PL_END_DT,(DATEDIFF(DAYS,PL_START_DT,PL_END_DT) + 1) PLANNING_DAYS, IFNULL(TGT_SPOT, 0) TGT_SPOT,TGT_GRP,
							IS_EPISODE_CHANGED_DB,IS_EPISODE_ATT_EDITED,STATUS
							FROM PR_PROJECT_EPISODE_DTL PDL JOIN PR_PROJECT_EPISODE_DTL_UI UI ON UI.PROJECT_ID = PDL.PROJECT_ID AND PDL.EPISODE_ID = UI.EPISODE_ID WHERE PDL.PROJECT_ID = :IN_PROJECT_ID;`,
		episodeRecurringTimeExc: `
								SELECT * FROM PR_EPISODE_EDIT_RECURRING WHERE PROJECT_ID = :IN_PROJECT_ID;`,

		episodeHeaderTimeExe: `
							SELECT EPISODE_ID,GET_OFFSET_TO_TIME(PET.START_OFFSET) START_TIME,GET_OFFSET_TO_TIME(PET.END_OFFSET) END_TIME,PET.DAYS_AIRBYTE FROM PR_PROJECT_EPISODE_CONSTRAINT PEC INNER JOIN
							PR_PROJECT_EPISODE_TIMEBAND PET ON PET.CONSTRAINT_TYPE_ID = PEC.CONSTRAINT_TYPE_ID AND PET.CONSTRAINT_ID = PEC.CONSTRAINT_KEY
							WHERE PEC.CONSTRAINT_TYPE_ID = 4 AND PEC.PROJECT_ID = :IN_PROJECT_ID ORDER BY EPISODE_ID;`,

		inventoryCapacity: `
						WITH CTE_PLAN AS(
							SELECT PLAN_ID,RCP.PERIOD_ID,RCP.PERIOD_ID + 1 FUTURE_PERIOD_ID FROM REF_CAL_PERIOD RCP 
							LEFT JOIN PR_PLAN PP ON PP.PERIOD_ID = RCP.PERIOD_ID AND PP.PLAN_TYPE = 1
							AND PP.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
								WHERE RCP.NAME = :IN_QTR AND PERIOD_TYPE_CD ='Q'
						)-- SELECT * from CTE_PLAN;
						,CTE_FUTURE_PLAN AS(
							SELECT PLAN_ID,PERIOD_ID FROM PR_PLAN PP WHERE 
								MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
								AND PERIOD_ID = (SELECT FUTURE_PERIOD_ID FROM CTE_PLAN)
								AND PLAN_TYPE = 1
						) -- SELECT * FROM CTE_FUTURE_PLAN;
						,CTE_NETWORK_DEMO AS (
							SELECT DEMO_ID FROM REF_MEDIA_OUTLET_DEMO WHERE MEDIA_OUTLET_ID= :IN_MEDIA_OUTLET_ID
							AND DEFAULT_YN='Y' LIMIT 1
						)

						,CTE_WEEKS AS (
						SELECT PERIOD_ID WEEK_PERIOD_ID,START_DATE V_START_DATE,END_DATE V_END_DATE,ROW_NUMBER() OVER(ORDER BY V_START_DATE) RNK FROM REF_CAL_PERIOD WHERE FISCAL_QTR IN (
											SELECT FISCAL_QTR FROM REF_CAL_PERIOD RCP JOIN CTE_PLAN CP
											WHERE RCP.PERIOD_ID IN (CP.PERIOD_ID,CP.FUTURE_PERIOD_ID)
											) AND PERIOD_TYPE_CD='W' LIMIT 26
						) 
						SELECT V_START_DATE,SUM(CAPACITY_PER_HOUR) UNITS,RNK FROM CTE_WEEKS 
						LEFT JOIN PR_PROMO_CAPACITY PPC ON PPC.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
						AND PPC.START_DATE BETWEEN V_START_DATE AND V_END_DATE
						AND PPC.PERIOD_TYPE = 'D'
						WHERE :IN_OUTPUT_TYPE = 1
						GROUP BY V_START_DATE,RNK
						UNION
						SELECT V_START_DATE,SUM(PPCG.GRP_CAPACITY) UNITS,RNK FROM CTE_WEEKS CW
						LEFT JOIN PR_PROMO_CAPACITY PRC ON START_DATE BETWEEN CW.V_START_DATE AND CW.V_END_DATE AND PERIOD_TYPE = 'D' 
						LEFT JOIN PR_PROMO_CAPACITY_GRP PPCG ON PRC.CAPACITY_ID=PPCG.CAPACITY_ID 
						AND PPCG.DEMO_ID = (SELECT DEMO_ID FROM CTE_NETWORK_DEMO)
						AND PRC.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
						WHERE :IN_OUTPUT_TYPE = 2
						GROUP BY V_START_DATE,RNK;`,

		utilizedInventory: `
						WITH CTE_PLAN AS(
					SELECT PLAN_ID,RCP.PERIOD_ID,RCP.PERIOD_ID + 1 FUTURE_PERIOD_ID FROM REF_CAL_PERIOD RCP 
					LEFT JOIN PR_PLAN PP ON PP.PERIOD_ID = RCP.PERIOD_ID AND PP.PLAN_TYPE = 1
					AND PP.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
						WHERE RCP.NAME = :IN_QTR AND PERIOD_TYPE_CD ='Q'
				)-- SELECT * from CTE_PLAN;
				,CTE_FUTURE_PLAN AS(
					SELECT PLAN_ID,PERIOD_ID FROM PR_PLAN PP WHERE 
						MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
						AND PERIOD_ID = (SELECT FUTURE_PERIOD_ID FROM CTE_PLAN)
						AND PLAN_TYPE = 1
				), -- SELECT * FROM CTE_FUTURE_PLAN;
				CTE_WEEKS AS (
				SELECT PERIOD_ID WEEK_PERIOD_ID,START_DATE V_START_DATE,END_DATE V_END_DATE FROM REF_CAL_PERIOD WHERE FISCAL_QTR IN (
									SELECT FISCAL_QTR FROM REF_CAL_PERIOD RCP JOIN CTE_PLAN CP
									WHERE RCP.PERIOD_ID IN (CP.PERIOD_ID,CP.FUTURE_PERIOD_ID)
									) AND PERIOD_TYPE_CD='W' LIMIT 26
				) -- SELECT * FROM CTE_WEEKS;

				SELECT V_START_DATE,SUM(UNITS) UNITS,ROW_NUMBER() OVER(ORDER BY V_START_DATE) RNK FROM (
					SELECT V_START_DATE,IFNULL(SUM(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN PLANNED_UNITS ELSE PLANNED_GRP END),0) UNITS FROM CTE_WEEKS CW 
					LEFT JOIN PR_PLAN_SCHEDULE PPS ON PPS.START_DATE BETWEEN CW.V_START_DATE AND CW.V_END_DATE
					AND PPS.MEDIA_OUTLET_ID =:IN_MEDIA_OUTLET_ID  AND PPS.PLAN_ID = (SELECT PLAN_ID FROM CTE_PLAN)
					GROUP BY V_START_DATE
					
					UNION ALL
					SELECT V_START_DATE,IFNULL(SUM(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN PLANNED_UNITS ELSE PLANNED_GRP END),0) UNITS FROM CTE_WEEKS CW 
					LEFT JOIN PR_PLAN_SCHEDULE_EPISODE PPS ON PPS.START_DATE BETWEEN CW.V_START_DATE AND CW.V_END_DATE
					AND PPS.MEDIA_OUTLET_ID =:IN_MEDIA_OUTLET_ID  AND PPS.PLAN_ID = (SELECT PLAN_ID FROM CTE_PLAN)
					GROUP BY V_START_DATE
				) LAUNCH_EPISODE GROUP BY V_START_DATE;`,

		futureQuarterSpots: `
						WITH CTE_PLAN AS(
					SELECT PLAN_ID,RCP.PERIOD_ID,RCP.PERIOD_ID + 1 FUTURE_PERIOD_ID FROM REF_CAL_PERIOD RCP 
					LEFT JOIN PR_PLAN PP ON PP.PERIOD_ID = RCP.PERIOD_ID AND PP.PLAN_TYPE = 1
					AND PP.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
						WHERE RCP.NAME = :IN_QTR AND PERIOD_TYPE_CD ='Q'
				)-- SELECT * from CTE_PLAN;
				,CTE_FUTURE_PLAN AS(
					SELECT PLAN_ID,PERIOD_ID FROM PR_PLAN PP WHERE 
						MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID
						AND PERIOD_ID = (SELECT FUTURE_PERIOD_ID FROM CTE_PLAN)
						AND PLAN_TYPE = 1
				), -- SELECT * FROM CTE_FUTURE_PLAN;
				CTE_WEEKS AS (
				SELECT PERIOD_ID WEEK_PERIOD_ID,START_DATE V_START_DATE,END_DATE V_END_DATE,ROW_NUMBER() OVER(ORDER BY V_START_DATE) RNK FROM REF_CAL_PERIOD WHERE FISCAL_QTR IN (
									SELECT FISCAL_QTR FROM REF_CAL_PERIOD RCP JOIN CTE_PLAN CP
									WHERE RCP.PERIOD_ID IN (CP.PERIOD_ID,CP.FUTURE_PERIOD_ID)
									) AND PERIOD_TYPE_CD='W' LIMIT 26
				) -- SELECT * FROM CTE_WEEKS;

				SELECT V_START_DATE,SUM(UNITS) UNITS,RNK FROM (
					SELECT V_START_DATE,IFNULL(SUM(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN PLANNED_UNITS ELSE PLANNED_GRP END),0) UNITS,RNK FROM CTE_WEEKS CW 
					LEFT JOIN PR_PLAN_SCHEDULE PPS ON PPS.START_DATE BETWEEN CW.V_START_DATE AND CW.V_END_DATE
					AND PPS.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID AND PPS.PLAN_ID = (SELECT PLAN_ID FROM CTE_FUTURE_PLAN)
					GROUP BY V_START_DATE,RNK
					
					UNION ALL
					SELECT V_START_DATE,IFNULL(SUM(CASE WHEN :IN_OUTPUT_TYPE = 1 THEN PLANNED_UNITS ELSE PLANNED_GRP END),0) UNITS,RNK FROM CTE_WEEKS CW 
					LEFT JOIN PR_PLAN_SCHEDULE_EPISODE PPS ON PPS.START_DATE BETWEEN CW.V_START_DATE AND CW.V_END_DATE
					AND PPS.MEDIA_OUTLET_ID = :IN_MEDIA_OUTLET_ID AND PPS.PLAN_ID = (SELECT PLAN_ID FROM CTE_FUTURE_PLAN)
					GROUP BY V_START_DATE,RNK
				) LAUNCH_EPISODE GROUP BY V_START_DATE,RNK;`

	}
}