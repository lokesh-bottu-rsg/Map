WITH CTE_PARAM AS(
        SELECT VALUE::INT AS MEDIA_OUTLET_ID
        FROM TABLE(SPLIT_TO_TABLE(:IN_MEDIA_OUTLET_ID, ','))
)
,CTE_PLAN_ID AS(
            SELECT IFNULL(PLAN_ID,0) AS PLAN_ID,PLAN_STATUS_ID AS OPTIMIZATION_STATUS 
            FROM PR_PLAN PR 
            WHERE PERIOD_ID=
                    (SELECT PP.PERIOD_ID 
                    FROM REF_CAL_PERIOD PP 
                    WHERE PP.NAME=:IN_QTR and PERIOD_TYPE_CD='Q' LIMIT 1) 
            AND PR.MEDIA_OUTLET_ID=:IN_PRIMARY_CHANNEL AND ACTIVE_YN='Y' and PLAN_TYPE =:IN_PROJECT_TYPE  LIMIT 1
)
,CTE_VERSION_ID AS (
            select  CASE WHEN CI.OPTIMIZATION_STATUS<>3 THEN MAX(PLAN_VERSION_ID)-1 
            ELSE MAX(PLAN_VERSION_ID) END AS PLAN_VERSION_ID 
            from PR_PLAN_VERSION PPV
            JOIN CTE_PLAN_ID CI ON 1=1
            where PPV.PLAN_ID=CI.PLAN_ID
            GROUP BY CI.OPTIMIZATION_STATUS
)
,CTE_DEMO AS(
            SELECT DEMO_ID AS NETWORK_DEFAULT_DEMO_ID,NAME AS NETWORK_DEFAULT_DEMO_NAME 
            FROM REF_DEMO WHERE DEMO_ID =
                    (SELECT DEMO_ID FROM REF_MEDIA_OUTLET_DEMO RMO
                    JOIN CTE_PARAM CP ON 1=1
                    WHERE RMO.MEDIA_OUTLET_ID = CP.MEDIA_OUTLET_ID
                    AND DEFAULT_YN='Y' LIMIT 1)
)
,CTE_PROJECT_DETAIL AS(
            SELECT 	PROJECT_ID, 
                PP.NAME AS PROJECT_NAME, 
                PP.START_DATE AS PROJECT_START_DATE, 
                PP.END_DATE AS PROJECT_END_DATE, 
                PP.PREMIERE_DATE AS PREMIERE_DATE, 
                PP.PRIORITY,
                PP.PLAN_ID,
                PP.TARGET_DEMO_ID,
                PP.TARGET_SEGMENT, 
                PP.TARGET_FREQUENCY, 
                PP.TARGET_REACH, 
                PP.TARGET_GRP, 
                PP.CREATED_USER, 
                PP.MEDIA_OUTLET_ID,
                PP.CAMPAIGN_TYPE_ID AS TYPE_ID,
                CEIL(CASE WHEN DATEDIFF(DAY,DATE(PP.START_DATE),DATE(PP.END_DATE))=0 then 1 else DATEDIFF(DAY,DATE(PP.START_DATE),DATE(PP.END_DATE)) END /7) AS NO_OF_WEEKS,
                PP.USER_COMMENT,
                PP.SCATTER_IMPS,
                PP.EVENT_TYPE_ID,
                ET.EVENT_TYPE_NAME AS EVENT_NAME,
                PP.SUBEVENT_ID,
                ETS.SUBEVENT_NAME,
                PP.IS_EPISODIC
                FROM PR_PROJECT PP 
                LEFT JOIN REF_2E_EVENT_TYPE ET ON PP.EVENT_TYPE_ID=ET.EVENT_TYPE_ID
                LEFT JOIN REF_2E_EVENT_SUBTYPE_PROJECT ETS ON PP.SUBEVENT_ID=ETS.SUBEVENT_ID
                WHERE PP.MEDIA_OUTLET_ID IN (SELECT MEDIA_OUTLET_ID FROM CTE_PARAM) AND PP.IS_ACTIVE='Y' AND PP.PROJECT_TYPE=:IN_PROJECT_TYPE
                AND CASE WHEN :IN_PROJECT_TYPE = 2 THEN PP.SUBEVENT_ID IN (SELECT SUBEVENT_ID FROM REF_2E_EVENT_SUBTYPE_PROJECT WHERE OPTIMIZATION_TYPE='O') -- (1,2) 
                ELSE 1=1 END
)	
,CTE_CROSS_QTR_FLAG AS(
            select distinct P.NAME AS PLAN_NAME,PPP.PROJECT_ID from PR_PLAN_PROJECT PPP 
            JOIN CTE_PLAN_ID CP ON 1=1
            JOIN CTE_PROJECT_DETAIL CPT ON PPP.PROJECT_ID=CPT.PROJECT_ID
            JOIN PR_PLAN P on PPP.PLAN_ID=P.PLAN_ID and P.MEDIA_OUTLET_ID=:IN_PRIMARY_CHANNEL and PPP.PROJECT_ID=CPT.PROJECT_ID 
            AND P.PLAN_TYPE = :IN_PROJECT_TYPE
            AND P.ACTIVE_YN = 'Y' 
            and P.PLAN_ID <> ifnull(CP.PLAN_ID,0)
            and PPP.PLAN_VERSION_ID = (
            select MAX(PLAN_VERSION_ID) from PR_PLAN_VERSION PPV where PLAN_ID=P.PLAN_ID
            )
)
,CTE_SECONDARY_VERSION AS (
            SELECT PPP.PROJECT_ID, PPP.PLAN_ID, MAX(PPP.PLAN_VERSION_ID) PLAN_VERSION_ID FROM PR_PLAN_PROJECT PPP 
            INNER JOIN PR_PROJECT PP ON PPP.PROJECT_ID=PP.PROJECT_ID 
            JOIN CTE_PLAN_ID CI ON 1=1
            AND PPP.PLAN_ID = CI.PLAN_ID WHERE PPP.OPTIMIZE_YN='Y' AND PP.PROJECT_TYPE=:IN_PROJECT_TYPE
            AND CASE WHEN :IN_PROJECT_TYPE=2 THEN PP.SUBEVENT_ID IN (SELECT SUBEVENT_ID FROM REF_2E_EVENT_SUBTYPE_PROJECT WHERE OPTIMIZATION_TYPE='O') -- (1,2) 
            ELSE 1=1 END
            GROUP BY PPP.PROJECT_ID, PPP.PLAN_ID
)
,CTE_QTR_DETAIL AS(
        SELECT PD.*, 
        RCP.NAME AS QUARTER_NAME, 
        RCP.START_DATE AS QUARTER_START_DATE, 
        RCP.END_DATE AS QUARTER_END_DATE,  
        RD.NAME AS DEMO_NAME,
        RS.SEGMENT_ID,
        RS.SEGMENT_NAME,
        RMO.SHORT_NAME AS MEDIA_OUTLET_NAME, 
        RCT.NAME AS CAMPAIGN_TYPE, 
        RCT.display_seq as display_seq,
        CQ.PLAN_NAME,
        CASE WHEN :IN_PROJECT_TYPE=1 
        THEN( 	
                    CASE WHEN PD.TARGET_DEMO_ID IS NULL THEN 4 
                    ELSE 
                    CASE WHEN PD.TARGET_SEGMENT IS NULL THEN 4 
                    ELSE
                    CASE WHEN PD.TARGET_FREQUENCY IS NULL THEN 4 ELSE 0
                    END
                    END
                    END
            )
        WHEN :IN_PROJECT_TYPE=2 THEN
            (
                CASE WHEN PD.TARGET_DEMO_ID IS NULL THEN 4 ELSE 0 END
            ) END AS TARGET_METRICS_CHK,
        CASE WHEN PD.PREMIERE_DATE<>PD.PROJECT_END_DATE THEN 5 ELSE 0 END AS PREMIERE_DATE_CHK,
        0 AS NRH_CHK,
        CASE WHEN CQ.PLAN_NAME IS NOT NULL THEN 7 ELSE 0 END  AS CROSS_QTR_CHK, 
        IFNULL(OPT_TYPE.OPTIMIZATION_TYPE,-1) AS OPTIMIZATION_TYPE_CHK
        FROM CTE_PROJECT_DETAIL PD
        LEFT JOIN CTE_CROSS_QTR_FLAG CQ ON PD.PROJECT_ID=CQ.PROJECT_ID
        JOIN REF_CAL_PERIOD RCP ON date(PD.PROJECT_START_DATE) between RCP.START_DATE and RCP.END_DATE AND RCP.NAME = :IN_QTR AND RCP.PERIOD_TYPE_CD = 'Q' 
        LEFT JOIN REF_MEDIA_OUTLET RMO ON RMO.MEDIA_OUTLET_ID= PD.MEDIA_OUTLET_ID
        LEFT JOIN REF_CAMPAIGN_TYPE RCT ON RCT.CAMPAIGN_TYPE_ID=PD.TYPE_ID
        LEFT JOIN REF_DEMO RD ON RD.DEMO_ID=PD.TARGET_DEMO_ID
        LEFT JOIN REF_SEGMENT RS ON RS.SEGMENT_ID=PD.TARGET_SEGMENT
        LEFT JOIN PR_PLAN PL ON PL.PLAN_ID=PD.PLAN_ID
        LEFT JOIN 
        (
                SELECT DS.PROJECT_ID, 
                case when T.PROJECT_ID is null then null else  PPV.OPTIMIZATION_TYPE end OPTIMIZATION_TYPE
                FROM PR_PLAN_VERSION PPV 
                INNER JOIN CTE_SECONDARY_VERSION DS ON PPV.PLAN_ID=DS.PLAN_ID AND PPV.PLAN_VERSION_ID=DS.PLAN_VERSION_ID
        LEFT JOIN 
        (
        select PROJECT_ID from PR_PLAN_PROJECT PP
        JOIN CTE_PLAN_ID CI ON 1=1
        JOIN CTE_VERSION_ID CV ON 1=1
        where PP.PLAN_ID=CI.PLAN_ID and PP.PLAN_VERSION_ID=CV.PLAN_VERSION_ID
        )T ON DS.PROJECT_ID=T.PROJECT_ID
        ) OPT_TYPE ON  OPT_TYPE.PROJECT_ID=PD.PROJECT_ID
        ORDER BY PROJECT_NAME ASC
)
,CTE_VALIDATION_MSG AS (
    SELECT 
        CQ.*, 
        RV1.VALIDATION_MESSAGE AS TARGET_METRICS_CHK_MSG,
        RV2.VALIDATION_MESSAGE AS PREMIERE_DATE_CHK_MSG,
        RV3.VALIDATION_MESSAGE AS NRH_CHK_MSG,
        REPLACE(RV4.VALIDATION_MESSAGE, '<>', CQ.PLAN_NAME) AS CROSS_QTR_CHK_MSG,
        CD.NETWORK_DEFAULT_DEMO_NAME AS NETWORK_DEFAULT_DEMO,
        CD.NETWORK_DEFAULT_DEMO_ID AS NETWORK_DEFAULT_DEMO_ID
    FROM 
        CTE_QTR_DETAIL CQ
    JOIN 
        CTE_DEMO CD ON 1 = 1
    LEFT JOIN 
        REF_MAP_VALIDATION RV1 ON RV1.VALIDATION_ID = CQ.TARGET_METRICS_CHK
    LEFT JOIN 
        REF_MAP_VALIDATION RV2 ON RV2.VALIDATION_ID = CQ.PREMIERE_DATE_CHK
    LEFT JOIN 
        REF_MAP_VALIDATION RV3 ON RV3.VALIDATION_ID = CQ.NRH_CHK
    LEFT JOIN 
        REF_MAP_VALIDATION RV4 ON RV4.VALIDATION_ID = CQ.CROSS_QTR_CHK
)
SELECT * FROM CTE_VALIDATION_MSG;